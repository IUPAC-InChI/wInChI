	TITLE	F:\IChI\wIChI\wIChIDoc.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BB@NAAD@Magellan?5MSWHEEL?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_06FPAF@MouseZ?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BA@CLBL@MSWHEEL_ROLLMSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@DLPD@MSH_WHEELSUPPORT_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BF@ODOJ@MSH_SCROLL_LINES_MSG?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_00A@?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BP@KLJH@invalid?5vector?$DMbool?$DO?5subscript?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_GBrowseFileEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SECBrowseFileEdit@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1BrowseFileEdit@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCWIChIDoc@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1DlgOptions@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDABV?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@IABIABV?$allocator@I@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@IV?$allocator@I@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?reserve@?$vector@IV?$allocator@I@std@@@std@@QAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QAEPAIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?resize@?$vector@IV?$allocator@I@std@@@std@@QAEXIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@IV?$allocator@I@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_allocator@?$vector@IV?$allocator@I@std@@@std@@QBE?AV?$allocator@I@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@IV?$allocator@I@std@@@std@@QAEAAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@IV?$allocator@I@std@@@std@@QAEPAIPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eq@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lt@?$vector@IV?$allocator@I@std@@@std@@QBE_NABV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@?$vector@IV?$allocator@I@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Viterator@?$vector@_NV?$allocator@I@std@@@std@@_NVreference@23@PAV423@H@std@@QAE@Viterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$reverse_iterator@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@_N$$CBVreference@23@PBV423@H@std@@QAE@Vconst_iterator@?$vector@_NV?$allocator@I@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@PAVIObserver@foundation@stingray@@V?$allocator@PAVIObserver@foundation@stingray@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAVIObserver@foundation@stingray@@V?$allocator@PAVIObserver@foundation@stingray@@@std@@@std@@QAEPAPAVIObserver@foundation@stingray@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@PAVIObserver@foundation@stingray@@V?$allocator@PAVIObserver@foundation@stingray@@@std@@@std@@QAEPAPAVIObserver@foundation@stingray@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVIObserver@foundation@stingray@@V?$allocator@PAVIObserver@foundation@stingray@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?back@?$vector@PAVIObserver@foundation@stingray@@V?$allocator@PAVIObserver@foundation@stingray@@@std@@@std@@QAEAAPAVIObserver@foundation@stingray@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?push_back@?$vector@PAVIObserver@foundation@stingray@@V?$allocator@PAVIObserver@foundation@stingray@@@std@@@std@@QAEXABQAVIObserver@foundation@stingray@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$vector@PAVIObserver@foundation@stingray@@V?$allocator@PAVIObserver@foundation@stingray@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@PAVIObserver@foundation@stingray@@V?$allocator@PAVIObserver@foundation@stingray@@@std@@@std@@QAEPAPAVIObserver@foundation@stingray@@PAPAV345@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CTypedPtrList@VCObList@@PAV1@@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CTypedPtrList@VCPtrList@@PAV1@@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTypedPtrList@VCPtrList@@PAVSECPersistentTreeNode@@@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAUIUnknown@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@ABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@PAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAUIUnknown@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@ABU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEAAV0@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetInterfacePtr@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QBEPAUIUnknown@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QBEPAUIMoniker@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QBEPAUIBinding@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$_CTypedPtrList@VCObList@@PAV1@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$_CTypedPtrList@VCPtrList@@PAV1@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CTypedPtrList@VCPtrList@@PAVSECPersistentTreeNode@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Nullstr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEX_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@I@std@@QAEPAIIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@I@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@I@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@IV?$allocator@I@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$vector@IV?$allocator@I@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@IV?$allocator@I@std@@@std@@QBEPBIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@IV?$allocator@I@std@@@std@@QAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@IV?$allocator@I@std@@@std@@IAEXPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ucopy@?$vector@IV?$allocator@I@std@@@std@@IAEPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@IV?$allocator@I@std@@@std@@IAEXPAIIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@PAVIObserver@foundation@stingray@@V?$allocator@PAVIObserver@foundation@stingray@@@std@@@std@@QAEPAPAVIObserver@foundation@stingray@@PAPAV345@ABQAV345@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@PAVIObserver@foundation@stingray@@V?$allocator@PAVIObserver@foundation@stingray@@@std@@@std@@IAEXPAPAVIObserver@foundation@stingray@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@PAVIObserver@foundation@stingray@@@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CTypedPtrList@VCPtrList@@PAVSECPersistentTreeNode@@@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJABU_GUID@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreateObject@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAEJPAGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@QAEAAV0@PAUIBinding@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$_CTypedPtrList@VCPtrList@@PAVSECPersistentTreeNode@@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Refcnt@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAEPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@I@std@@QAEXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@I@std@@QAEXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@PAVIObserver@foundation@stingray@@V?$allocator@PAVIObserver@foundation@stingray@@@std@@@std@@QAEXPAPAVIObserver@foundation@stingray@@IABQAV345@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAVIObserver@foundation@stingray@@@std@@QAEXPAPAVIObserver@foundation@stingray@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetIID@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@SAABU_GUID@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AddRef@?$_CIP@UIBinding@@$1?IID_IBinding@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Split@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ucopy@?$vector@PAVIObserver@foundation@stingray@@V?$allocator@PAVIObserver@foundation@stingray@@@std@@@std@@IAEPAPAVIObserver@foundation@stingray@@PBQAV345@0PAPAV345@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@PAVIObserver@foundation@stingray@@V?$allocator@PAVIObserver@foundation@stingray@@@std@@@std@@IAEXPAPAVIObserver@foundation@stingray@@IABQAV345@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@PAVIObserver@foundation@stingray@@@std@@QAEPAPAVIObserver@foundation@stingray@@IPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADIPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAVIObserver@foundation@stingray@@@std@@QAEXPAPAVIObserver@foundation@stingray@@ABQAV345@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXViterator@?$vector@_NV?$allocator@I@std@@@1@0AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@Vconst_iterator@31@0V231@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YA?AViterator@?$vector@_NV?$allocator@I@std@@@1@V231@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMap@IIPAVSECControlBar@@PAV1@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CMap@IIPAVSECControlBar@@PAV1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMap@IIPAUHMENU__@@PAU1@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CMap@IIPAUHMENU__@@PAU1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CArray@PAVSECBar@@PAV1@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CArray@PAVSECBar@@PAV1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIUnknown@@$1?IID_IUnknown@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CArray@UtagACCEL@@AAU1@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CArray@UtagACCEL@@AAU1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CArray@USECCommand@@AAU1@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CArray@USECCommand@@AAU1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMap@IIPAUBmpItem@SECBmpMgr@@PAU12@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CMap@IIPAUBmpItem@SECBmpMgr@@PAU12@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CList@PAVSECBmpMenuItemInfo@@PAV1@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CList@PAVSECBmpMenuItemInfo@@PAV1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMap@PAUHMENU__@@PAU1@PAUSECBmpMenuInfo@SECBmpMenuPlugIn@@PAU23@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CMap@PAUHMENU__@@PAU1@PAUSECBmpMenuInfo@SECBmpMenuPlugIn@@PAU23@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMap@IIII@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CMap@IIII@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CMap@IIKK@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Serialize@?$CMap@IIKK@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal@std@@YA_NPBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lexicographical_compare@std@@YA_NPBI000@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@I@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?swap@std@@YAXAAPAI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAPAVIObserver@foundation@stingray@@PAPAV234@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8std@@YA_NABV?$allocator@D@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAIHPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@std@@YAPAIPBI0PAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAI0ABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAIPAI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAIABI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?fill@std@@YAXPAPAVIObserver@foundation@stingray@@0ABQAV234@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy_backward@std@@YAPAPAVIObserver@foundation@stingray@@PAPAV234@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@std@@YAXPAPAVIObserver@foundation@stingray@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPAPAVIObserver@foundation@stingray@@HPAPAV234@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Allocate@std@@YAPADHPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Construct@std@@YAXPAPAVIObserver@foundation@stingray@@ABQAV234@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMap@IIPAVSECControlBar@@PAV1@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMap@IIPAUHMENU__@@PAU1@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CArray@PAVSECBar@@PAV1@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CArray@UtagACCEL@@AAU1@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CArray@USECCommand@@AAU1@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMap@IIPAUBmpItem@SECBmpMgr@@PAU12@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CList@PAVSECBmpMenuItemInfo@@PAV1@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMap@PAUHMENU__@@PAU1@PAUSECBmpMenuInfo@SECBmpMenuPlugIn@@PAU23@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMap@IIII@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CMap@IIKK@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Release@?$_CIP@UIMoniker@@$1?IID_IMoniker@@3U_GUID@@B@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Iter_cat@std@@YA?AUrandom_access_iterator_tag@1@ABU?$iterator@Urandom_access_iterator_tag@std@@_NH@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Distance@std@@YAXVconst_iterator@?$vector@_NV?$allocator@I@std@@@1@0AAIUrandom_access_iterator_tag@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAt@?$CMap@IIPAVSECControlBar@@PAV1@@@QAEXIPAVSECControlBar@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CMap@IIPAVSECControlBar@@PAV1@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SerializeElements@@YGXAAVCArchive@@PAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SerializeElements@@YGXAAVCArchive@@PAPAVSECControlBar@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAt@?$CMap@IIPAUHMENU__@@PAU1@@@QAEXIPAUHMENU__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CMap@IIPAUHMENU__@@PAU1@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SerializeElements@@YGXAAVCArchive@@PAPAUHMENU__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSize@?$CArray@PAVSECBar@@PAV1@@@QAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestructElements@@YGXPAPAVSECBar@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SerializeElements@@YGXAAVCArchive@@PAPAVSECBar@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSize@?$CArray@UtagACCEL@@AAU1@@@QAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestructElements@@YGXPAUtagACCEL@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SerializeElements@@YGXAAVCArchive@@PAUtagACCEL@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetSize@?$CArray@USECCommand@@AAU1@@@QAEXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestructElements@@YGXPAUSECCommand@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SerializeElements@@YGXAAVCArchive@@PAUSECCommand@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAt@?$CMap@IIPAUBmpItem@SECBmpMgr@@PAU12@@@QAEXIPAUBmpItem@SECBmpMgr@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CMap@IIPAUBmpItem@SECBmpMgr@@PAU12@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SerializeElements@@YGXAAVCArchive@@PAPAUBmpItem@SECBmpMgr@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddTail@?$CList@PAVSECBmpMenuItemInfo@@PAV1@@@QAEPAU__POSITION@@PAVSECBmpMenuItemInfo@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CList@PAVSECBmpMenuItemInfo@@PAV1@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SerializeElements@@YGXAAVCArchive@@PAPAVSECBmpMenuItemInfo@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAt@?$CMap@PAUHMENU__@@PAU1@PAUSECBmpMenuInfo@SECBmpMenuPlugIn@@PAU23@@@QAEXPAUHMENU__@@PAUSECBmpMenuInfo@SECBmpMenuPlugIn@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CMap@PAUHMENU__@@PAU1@PAUSECBmpMenuInfo@SECBmpMenuPlugIn@@PAU23@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SerializeElements@@YGXAAVCArchive@@PAPAUSECBmpMenuInfo@SECBmpMenuPlugIn@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAt@?$CMap@IIII@@QAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CMap@IIII@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetAt@?$CMap@IIKK@@QAEXIK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CMap@IIKK@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SerializeElements@@YGXAAVCArchive@@PAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?mismatch@std@@YA?AU?$pair@PBIPBI@1@PBI00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSECCommand@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SECCommand@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@PBIPBI@std@@QAE@ABQBI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$CMap@IIPAVSECControlBar@@PAV1@@@QAEAAPAVSECControlBar@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestructElements@@YGXPAPAVSECControlBar@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestructElements@@YGXPAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$CMap@IIPAUHMENU__@@PAU1@@@QAEAAPAUHMENU__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestructElements@@YGXPAPAUHMENU__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConstructElements@@YGXPAPAVSECBar@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConstructElements@@YGXPAUtagACCEL@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConstructElements@@YGXPAUSECCommand@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$CMap@IIPAUBmpItem@SECBmpMgr@@PAU12@@@QAEAAPAUBmpItem@SECBmpMgr@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestructElements@@YGXPAPAUBmpItem@SECBmpMgr@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?NewNode@?$CList@PAVSECBmpMenuItemInfo@@PAV1@@@IAEPAUCNode@1@PAU21@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestructElements@@YGXPAPAVSECBmpMenuItemInfo@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$CMap@PAUHMENU__@@PAU1@PAUSECBmpMenuInfo@SECBmpMenuPlugIn@@PAU23@@@QAEAAPAUSECBmpMenuInfo@SECBmpMenuPlugIn@@PAUHMENU__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestructElements@@YGXPAPAUSECBmpMenuInfo@SECBmpMenuPlugIn@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$CMap@IIII@@QAEAAII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$CMap@IIKK@@QAEAAKI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DestructElements@@YGXPAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InitHashTable@?$CMap@IIPAVSECControlBar@@PAV1@@@QAEXIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?NewAssoc@?$CMap@IIPAVSECControlBar@@PAV1@@@IAEPAUCAssoc@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAssocAt@?$CMap@IIPAVSECControlBar@@PAV1@@@IBEPAUCAssoc@1@IAAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InitHashTable@?$CMap@IIPAUHMENU__@@PAU1@@@QAEXIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?NewAssoc@?$CMap@IIPAUHMENU__@@PAU1@@@IAEPAUCAssoc@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAssocAt@?$CMap@IIPAUHMENU__@@PAU1@@@IBEPAUCAssoc@1@IAAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InitHashTable@?$CMap@IIPAUBmpItem@SECBmpMgr@@PAU12@@@QAEXIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?NewAssoc@?$CMap@IIPAUBmpItem@SECBmpMgr@@PAU12@@@IAEPAUCAssoc@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAssocAt@?$CMap@IIPAUBmpItem@SECBmpMgr@@PAU12@@@IBEPAUCAssoc@1@IAAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConstructElements@@YGXPAPAVSECBmpMenuItemInfo@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InitHashTable@?$CMap@PAUHMENU__@@PAU1@PAUSECBmpMenuInfo@SECBmpMenuPlugIn@@PAU23@@@QAEXIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?NewAssoc@?$CMap@PAUHMENU__@@PAU1@PAUSECBmpMenuInfo@SECBmpMenuPlugIn@@PAU23@@@IAEPAUCAssoc@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAssocAt@?$CMap@PAUHMENU__@@PAU1@PAUSECBmpMenuInfo@SECBmpMenuPlugIn@@PAU23@@@IBEPAUCAssoc@1@PAUHMENU__@@AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InitHashTable@?$CMap@IIII@@QAEXIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?NewAssoc@?$CMap@IIII@@IAEPAUCAssoc@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAssocAt@?$CMap@IIII@@IBEPAUCAssoc@1@IAAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InitHashTable@?$CMap@IIKK@@QAEXIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?NewAssoc@?$CMap@IIKK@@IAEPAUCAssoc@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAssocAt@?$CMap@IIKK@@IBEPAUCAssoc@1@IAAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConstructElements@@YGXPAIH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConstructElements@@YGXPAPAVSECControlBar@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HashKey@@YGII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CompareElements@@YGHPBI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConstructElements@@YGXPAPAUHMENU__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConstructElements@@YGXPAPAUBmpItem@SECBmpMgr@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConstructElements@@YGXPAPAUSECBmpMenuInfo@SECBmpMenuPlugIn@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HashKey@@YGIPAUHMENU__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CompareElements@@YGHPBQAUHMENU__@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConstructElements@@YGXPAKH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_ESECComboBtn@@WDM@AEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCReBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReBarCtrl@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSECListSubItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SECListSubItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SECListSubItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCMonikerFile@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InitAdditionalColors@SECColorWell@foundation@stingray@@MAEXPAUtagPALETTEENTRY@@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSECPopupColorWell@foundation@stingray@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SECPopupColorWell@foundation@stingray@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SECPopupColorWell@foundation@stingray@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Doraise@runtime_error@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0runtime_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1runtime_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_Gruntime_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCommonDialog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCommonDialog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@out_of_range@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@logic_error@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA2?AVlogic_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSECBtnCaption@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SECBtnCaption@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SECBtnCaption@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?OnHide@SECStdBtn@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanDrag@SECBtnCaption@@UBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSECListEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SECListEdit@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SECListEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCNotSupportedException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNotSupportedException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CNotSupportedException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1CSimpleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMemoryException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMemoryException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CMemoryException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSimpleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCScrollBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFileException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CFileException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CFileException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCArchiveException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CArchiveException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CArchiveException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTabCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCIPAddressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@length_error@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRichEditCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCAnimateCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHotKeyCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@bad_alloc@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBoxEx@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCProgressCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSliderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCHeaderCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSpinButtonCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTreeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSECPTNFactory@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDragListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@invalid_argument@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0invalid_argument@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1invalid_argument@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_Ginvalid_argument@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFilePath@CFile@@UAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSECCompressFile@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SECCompressFile@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SECCompressFile@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCRectTracker@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSECTreePaintContext@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SECTreePaintContext@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SECTreePaintContext@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1SECListPaintContext@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SECListPaintContext@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCBitmapButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmapButton@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBitmap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CBitmap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1CGdiObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CGdiObject@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_G?$CTypedPtrList@VCObList@@PAV1@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTypedPtrList@VCObList@@PAV1@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@bad_exception@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0bad_exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7bad_exception@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1bad_exception@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA2?AVbad_exception@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVbad_exception@std@@@8??0bad_exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_exception@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_Gbad_exception@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@domain_error@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0domain_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7domain_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1domain_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVdomain_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVdomain_error@std@@@8??0domain_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVdomain_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gdomain_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9Format@SECCurrencyEdit@@UBEHABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GFormat@SECCurrencyEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1Format@SECCurrencyEdit@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7Format@SECCurrencyEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_G?$CTypedPtrList@VCPtrList@@PAV1@@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTypedPtrList@VCPtrList@@PAV1@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDateTimeCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSECMenuListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SECMenuListBox@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SECMenuListBox@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GSECTreeNodeX@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SECTreeNodeX@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SECTreeNodeX@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1SECTreeNode@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SECTreeNode@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_G__non_rtti_object@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1__non_rtti_object@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1bad_typeid@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFirstChild@SECTreeNode@@UBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPrevSibling@SECTreeNode@@UBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNextSibling@SECTreeNode@@UBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetParent@SECTreeNode@@UBEPAV1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSECTreeNode@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?OnNextSearchNode@_Node@@UAEHGPAVSECTreeNode@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Expand@_Node@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsExpanded@_Node@@UBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G_Node@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1_Node@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7_Node@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCNoTrackObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CNoTrackObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Gbad_typeid@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSECComboBtnEdit@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SECComboBtnEdit@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SECComboBtnEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GSECComboBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SECComboBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SECComboBtn@@6BCComboBox@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7SECComboBtn@@6BSECWndBtn@@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1SECWndBtn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SECWndBtn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1CFont@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CFont@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Gbad_cast@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1bad_cast@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSECBtnInfoArray@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SECBtnInfoArray@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SECBtnInfoArray@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?RemoveAll@SECBtnInfoArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@CPtrArray@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@SECBtnInfoArray@@QBEPAUSECBtnInfo@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAt@CPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@CPtrArray@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GISubjectImpl@foundation@stingray@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1ISubjectImpl@foundation@stingray@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7ISubjectImpl@foundation@stingray@@6BIQueryGuid@12@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7ISubjectImpl@foundation@stingray@@6BIRefCount@12@@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?UpdateAllObservers@ISubjectImpl@foundation@stingray@@UAEXPAVIObserver@23@PAVIMessage@23@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveObserver@ISubjectImpl@foundation@stingray@@UAEXPAVIObserver@23@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddObserver@ISubjectImpl@foundation@stingray@@UAEXPAVIObserver@23@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?QueryGuid@ISubjectImpl@foundation@stingray@@UAE_NABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_6d2a25c1_be4a_4f2c_9cd2_e461b7d0da49
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __GUID_8407b2b1_4b5e_11d3_af1b_006008afe059
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_8407b2b0_4b5e_11d3_af1b_006008afe059
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_GSECPTNStrategy@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SECPTNStrategy@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SECPTNStrategy@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCStatusBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCIterPos@foundation@stingray@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCIterPos@foundation@stingray@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CCIterPos@foundation@stingray@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GSECListPaintContext@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCComboBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSECBtnInfo@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCCheckListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CCheckListBox@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCListBox@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCButton@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStatic@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMenu@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CMenu@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CMenu@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCToolBarCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@range_error@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0range_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7range_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1range_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVrange_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVrange_error@std@@@8??0range_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVrange_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_Grange_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRgn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRgn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CRgn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCOleException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1COleException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7COleException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCPalette@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPalette@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CPalette@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCBitmap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCFont@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCBrush@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CBrush@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CBrush@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?SetModifiedFlag@CDocument@@UAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsModified@CDocument@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPen@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CPen@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CPen@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCGdiObject@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCUserException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CUserException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CUserException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCResourceException@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CResourceException@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CResourceException@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GSECToolBarSheet@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SECToolBarSheet@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@underflow_error@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0underflow_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7underflow_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1underflow_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVunderflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVunderflow_error@std@@@8??0underflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVunderflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_Gunderflow_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSECWndBtn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanDrag@SECStdBtn@@UBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSECReBar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SECReBar@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CReBar@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GSECListItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1SECListItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7SECListItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetSubItemCount@SECListItem@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubItem@SECListItem@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSubItem@SECListItem@@QBEPAVSECListSubItem@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACPtrArray@@QBEPAXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BeginModalState@CWnd@@UAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoDataExchange@CWnd@@MAEXPAVCDataExchange@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCMonthCalCtrl@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Doraise@overflow_error@std@@MBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0overflow_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7overflow_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __TI3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1overflow_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVoverflow_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVoverflow_error@std@@@8??0overflow_error@std@@QAE@ABV01@@Z28
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVoverflow_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?what@runtime_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_Goverflow_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CPlex@@QAEPAXXZ
text$AFX_COL1	SEGMENT PARA USE32 PUBLIC ''
text$AFX_COL1	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBEHV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CMap@IIKK@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMap@IIII@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMap@PAUHMENU__@@PAU1@PAUSECBmpMenuInfo@SECBmpMenuPlugIn@@PAU23@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CList@PAVSECBmpMenuItemInfo@@PAV1@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMap@IIPAUBmpItem@SECBmpMgr@@PAU12@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CArray@USECCommand@@AAU1@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CArray@UtagACCEL@@AAU1@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CArray@PAVSECBar@@PAV1@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$CMap@IIPAUHMENU__@@PAU1@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Serialize@CObject@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CObject@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CMap@IIPAVSECControlBar@@PAV1@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??Dconst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?BVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0reference@?$vector@_NV?$allocator@I@std@@@std@@QAE@IPAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$vector@_NV?$allocator@I@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@_NV?$allocator@I@std@@@std@@QBE?AVreference@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4reference@?$vector@_NV?$allocator@I@std@@@std@@QAEAAV012@ABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Breference@?$vector@_NV?$allocator@I@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8iterator@?$vector@_NV?$allocator@I@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$_CTypedPtrList@VCPtrList@@PAVSECPersistentTreeNode@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_C@?1??_Nullstr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAPBDXZ@4DB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTypedPtrList@VCPtrList@@PAVSECPersistentTreeNode@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CTypedPtrList@VCPtrList@@PAV1@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_CTypedPtrList@VCObList@@PAV1@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$CTypedPtrList@VCPtrList@@PAVSECPersistentTreeNode@@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??1?$_CTypedPtrList@VCPtrList@@PAVSECPersistentTreeNode@@@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7?$_CTypedPtrList@VCPtrList@@PAV1@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7?$_CTypedPtrList@VCObList@@PAV1@@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateWindow@CWnd@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Invalidate@CWnd@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??ACStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@CStringArray@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@CStringArray@@QAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEmpty@CString@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@CStringArray@@QAEHABVCString@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsStoring@CArchive@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CWIChIDoc@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AfxGetMainWnd@@YGPAVCWnd@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PostMessageA@CWnd@@QAEHIIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CString@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7BrowseFileEdit@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCA, CRT$XCU, CRT$XCL, CRT$XCC, CRT$XCZ, xdata$x
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	?classCWIChIDoc@CWIChIDoc@@2UCRuntimeClass@@B	; CWIChIDoc::classCWIChIDoc
PUBLIC	?CreateObject@CWIChIDoc@@SGPAVCObject@@XZ	; CWIChIDoc::CreateObject
PUBLIC	?OnFileOpen@CWIChIDoc@@IAEXXZ			; CWIChIDoc::OnFileOpen
PUBLIC	?OnViewNextStru@CWIChIDoc@@IAEXXZ		; CWIChIDoc::OnViewNextStru
PUBLIC	?OnUpdateViewNextStru@CWIChIDoc@@IAEXPAVCCmdUI@@@Z ; CWIChIDoc::OnUpdateViewNextStru
PUBLIC	?OnViewAnalize@CWIChIDoc@@IAEXXZ		; CWIChIDoc::OnViewAnalize
PUBLIC	?OnUpdateViewAnalize@CWIChIDoc@@IAEXPAVCCmdUI@@@Z ; CWIChIDoc::OnUpdateViewAnalize
PUBLIC	?OnThreadFinished@CWIChIDoc@@IAEXXZ		; CWIChIDoc::OnThreadFinished
PUBLIC	?OnViewNext@CWIChIDoc@@IAEXXZ			; CWIChIDoc::OnViewNext
PUBLIC	?OnUpdateViewNext@CWIChIDoc@@IAEXPAVCCmdUI@@@Z	; CWIChIDoc::OnUpdateViewNext
PUBLIC	?OnViewPrevios@CWIChIDoc@@IAEXXZ		; CWIChIDoc::OnViewPrevios
PUBLIC	?OnUpdateViewPrevios@CWIChIDoc@@IAEXPAVCCmdUI@@@Z ; CWIChIDoc::OnUpdateViewPrevios
PUBLIC	?OnUpdateFileOpen@CWIChIDoc@@IAEXPAVCCmdUI@@@Z	; CWIChIDoc::OnUpdateFileOpen
PUBLIC	?_messageEntries@CWIChIDoc@@0QBUAFX_MSGMAP_ENTRY@@B ; CWIChIDoc::_messageEntries
PUBLIC	?messageMap@CWIChIDoc@@1UAFX_MSGMAP@@B		; CWIChIDoc::messageMap
PUBLIC	?gbThreadON@@3HA				; gbThreadON
PUBLIC	?gThreadData@@3UThreadData@@A			; gThreadData
PUBLIC	?gSizeDrawingVec@@3HA				; gSizeDrawingVec
PUBLIC	?gDrawingVec@@3PAPAUDrawData@@A			; gDrawingVec
PUBLIC	?gResultOutput@@3VCString@@A			; gResultOutput
EXTRN	?classCDocument@CDocument@@2UCRuntimeClass@@B:BYTE ; CDocument::classCDocument
EXTRN	?messageMap@CDocument@@1UAFX_MSGMAP@@B:QWORD	; CDocument::messageMap
_BSS	SEGMENT
?gbThreadON@@3HA DD 01H DUP (?)				; gbThreadON
	ALIGN	8

?gThreadData@@3UThreadData@@A DQ 01H DUP (?)		; gThreadData
?gSizeDrawingVec@@3HA DD 01H DUP (?)			; gSizeDrawingVec
?gDrawingVec@@3PAPAUDrawData@@A DD 012cH DUP (?)	; gDrawingVec
?gResultOutput@@3VCString@@A DD 01H DUP (?)		; gResultOutput
_BSS	ENDS
_DATA	SEGMENT
$SG100416 DB	'secComboExNewItem', 00H
	ORG $+2
$SG100428 DB	'secComboExApply', 00H
_DATA	ENDS
CRT$XCU	SEGMENT
_$S613	DD	FLAT:_$E612
CRT$XCU	ENDS
CONST	SEGMENT
?classCWIChIDoc@CWIChIDoc@@2UCRuntimeClass@@B DD FLAT:$SG124248 ; CWIChIDoc::classCWIChIDoc
	DD	0244H
	DD	0ffffH
	DD	FLAT:?CreateObject@CWIChIDoc@@SGPAVCObject@@XZ
	DD	FLAT:?classCDocument@CDocument@@2UCRuntimeClass@@B
	DD	00H
?messageMap@CWIChIDoc@@1UAFX_MSGMAP@@B DD FLAT:?messageMap@CDocument@@1UAFX_MSGMAP@@B ; CWIChIDoc::messageMap
	DD	FLAT:?_messageEntries@CWIChIDoc@@0QBUAFX_MSGMAP_ENTRY@@B
?_messageEntries@CWIChIDoc@@0QBUAFX_MSGMAP_ENTRY@@B DD 0111H ; CWIChIDoc::_messageEntries
	DD	00H
	DD	0e101H
	DD	0e101H
	DD	0cH
	DD	FLAT:?OnFileOpen@CWIChIDoc@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08003H
	DD	08003H
	DD	0cH
	DD	FLAT:?OnViewNextStru@CWIChIDoc@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08003H
	DD	08003H
	DD	02cH
	DD	FLAT:?OnUpdateViewNextStru@CWIChIDoc@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08005H
	DD	08005H
	DD	0cH
	DD	FLAT:?OnViewAnalize@CWIChIDoc@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08005H
	DD	08005H
	DD	02cH
	DD	FLAT:?OnUpdateViewAnalize@CWIChIDoc@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08006H
	DD	08006H
	DD	0cH
	DD	FLAT:?OnThreadFinished@CWIChIDoc@@IAEXXZ
	DD	0111H
	DD	00H
	DD	08007H
	DD	08007H
	DD	0cH
	DD	FLAT:?OnViewNext@CWIChIDoc@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08007H
	DD	08007H
	DD	02cH
	DD	FLAT:?OnUpdateViewNext@CWIChIDoc@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	00H
	DD	08008H
	DD	08008H
	DD	0cH
	DD	FLAT:?OnViewPrevios@CWIChIDoc@@IAEXXZ
	DD	0111H
	DD	0ffffffffH
	DD	08008H
	DD	08008H
	DD	02cH
	DD	FLAT:?OnUpdateViewPrevios@CWIChIDoc@@IAEXPAVCCmdUI@@@Z
	DD	0111H
	DD	0ffffffffH
	DD	0e101H
	DD	0e101H
	DD	02cH
	DD	FLAT:?OnUpdateFileOpen@CWIChIDoc@@IAEXPAVCCmdUI@@@Z
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
_DATA	SEGMENT
$SG124248 DB	'CWIChIDoc', 00H
_DATA	ENDS
_TEXT	SEGMENT
_$E612	PROC NEAR
	push	ebp
	mov	ebp, esp
	call	_$E609
	call	_$E611
	pop	ebp
	ret	0
_$E612	ENDP
_TEXT	ENDS
PUBLIC	??0CString@@QAE@XZ				; CString::CString
_TEXT	SEGMENT
_$E609	PROC NEAR

; 26   : CString gResultOutput;

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET FLAT:?gResultOutput@@3VCString@@A ; gResultOutput
	call	??0CString@@QAE@XZ			; CString::CString
	pop	ebp
	ret	0
_$E609	ENDP
_TEXT	ENDS
EXTRN	_atexit:NEAR
_TEXT	SEGMENT
_$E611	PROC NEAR
	push	ebp
	mov	ebp, esp
	push	OFFSET FLAT:_$E610
	call	_atexit
	add	esp, 4
	pop	ebp
	ret	0
_$E611	ENDP
_TEXT	ENDS
EXTRN	??1CString@@QAE@XZ:NEAR				; CString::~CString
_TEXT	SEGMENT
_$E610	PROC NEAR
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET FLAT:?gResultOutput@@3VCString@@A ; gResultOutput
	call	??1CString@@QAE@XZ			; CString::~CString
	pop	ebp
	ret	0
_$E610	ENDP
_TEXT	ENDS
PUBLIC	?free_drawing_vec@@YAXXZ			; free_drawing_vec
EXTRN	_FreeDrawData:NEAR
_TEXT	SEGMENT
_i$ = -4
?free_drawing_vec@@YAXXZ PROC NEAR			; free_drawing_vec

; 29   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 30   : 	for(int i = 0; i < gSizeDrawingVec; i++ )

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $L124207
$L124208:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$L124207:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR ?gSizeDrawingVec@@3HA	; gSizeDrawingVec
	jge	SHORT $L124209

; 32   : 		FreeDrawData(gDrawingVec[i]);

	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR ?gDrawingVec@@3PAPAUDrawData@@A[edx*4]
	push	eax
	call	_FreeDrawData
	add	esp, 4

; 33   : 	}

	jmp	SHORT $L124208
$L124209:

; 34   : 	gSizeDrawingVec = 0;

	mov	DWORD PTR ?gSizeDrawingVec@@3HA, 0	; gSizeDrawingVec

; 35   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?free_drawing_vec@@YAXXZ ENDP				; free_drawing_vec
_TEXT	ENDS
PUBLIC	?add_to_drawing_vec@@YAXPAUDrawData@@@Z		; add_to_drawing_vec
_TEXT	SEGMENT
_pData$ = 8
?add_to_drawing_vec@@YAXPAUDrawData@@@Z PROC NEAR	; add_to_drawing_vec

; 38   : {

	push	ebp
	mov	ebp, esp

; 39   : 	if( gSizeDrawingVec < sizeof(gDrawingVec)/sizeof(gDrawingVec[0]) )

	cmp	DWORD PTR ?gSizeDrawingVec@@3HA, 300	; gSizeDrawingVec, 0000012cH
	jae	SHORT $L124213

; 41   : 		gDrawingVec[gSizeDrawingVec] = pData;

	mov	eax, DWORD PTR ?gSizeDrawingVec@@3HA	; gSizeDrawingVec
	mov	ecx, DWORD PTR _pData$[ebp]
	mov	DWORD PTR ?gDrawingVec@@3PAPAUDrawData@@A[eax*4], ecx

; 42   : 		gSizeDrawingVec++;

	mov	edx, DWORD PTR ?gSizeDrawingVec@@3HA	; gSizeDrawingVec
	add	edx, 1
	mov	DWORD PTR ?gSizeDrawingVec@@3HA, edx	; gSizeDrawingVec
$L124213:

; 44   : }

	pop	ebp
	ret	0
?add_to_drawing_vec@@YAXPAUDrawData@@@Z ENDP		; add_to_drawing_vec
_TEXT	ENDS
PUBLIC	?find_index@@YAHPAUDrawData@@@Z			; find_index
_TEXT	SEGMENT
_pData$ = 8
_i$ = -4
?find_index@@YAHPAUDrawData@@@Z PROC NEAR		; find_index

; 47   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 48   : 	if( pData == NULL )

	cmp	DWORD PTR _pData$[ebp], 0
	jne	SHORT $L124217

; 49   : 		return -1;

	or	eax, -1
	jmp	SHORT $L124216
$L124217:

; 50   : 	for(int i = 0; i < gSizeDrawingVec; i++ )

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $L124219
$L124220:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$L124219:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR ?gSizeDrawingVec@@3HA	; gSizeDrawingVec
	jge	SHORT $L124221

; 52   : 		if( pData == gDrawingVec[i] )

	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _pData$[ebp]
	cmp	eax, DWORD PTR ?gDrawingVec@@3PAPAUDrawData@@A[edx*4]
	jne	SHORT $L124222

; 53   : 			return i;

	mov	eax, DWORD PTR _i$[ebp]
	jmp	SHORT $L124216
$L124222:

; 54   : 	}

	jmp	SHORT $L124220
$L124221:

; 55   : 	return -1;

	or	eax, -1
$L124216:

; 56   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?find_index@@YAHPAUDrawData@@@Z ENDP			; find_index
_TEXT	ENDS
PUBLIC	?thread_callback@@YAHHPAUDrawData@@@Z		; thread_callback
PUBLIC	?PostMessageA@CWnd@@QAEHIIJ@Z			; CWnd::PostMessageA
PUBLIC	?AfxGetMainWnd@@YGPAVCWnd@@XZ			; AfxGetMainWnd
_TEXT	SEGMENT
_nCode$ = 8
_pDrawData$ = 12
?thread_callback@@YAHHPAUDrawData@@@Z PROC NEAR		; thread_callback

; 60   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 62   : 	{

	mov	eax, DWORD PTR _nCode$[ebp]
	mov	DWORD PTR -4+[ebp], eax
	cmp	DWORD PTR -4+[ebp], 0
	je	SHORT $L124231
	cmp	DWORD PTR -4+[ebp], 1
	je	SHORT $L124232
	cmp	DWORD PTR -4+[ebp], 2
	je	SHORT $L124234
	jmp	SHORT $L124228
$L124231:

; 63   : 	case THREAD_STARTED:
; 64   : 		 gbThreadON = TRUE;

	mov	DWORD PTR ?gbThreadON@@3HA, 1		; gbThreadON

; 65   : 		 break;

	jmp	SHORT $L124228
$L124232:

; 66   : 	case THREAD_WORKING:
; 67   : 		if( pDrawData )

	cmp	DWORD PTR _pDrawData$[ebp], 0
	je	SHORT $L124233

; 69   : 			add_to_drawing_vec(pDrawData);

	mov	ecx, DWORD PTR _pDrawData$[ebp]
	push	ecx
	call	?add_to_drawing_vec@@YAXPAUDrawData@@@Z	; add_to_drawing_vec
	add	esp, 4
$L124233:

; 71   : 		break;

	jmp	SHORT $L124228
$L124234:

; 72   : 	case THREAD_FINISHED:
; 73   : 		 gbThreadON = FALSE;

	mov	DWORD PTR ?gbThreadON@@3HA, 0		; gbThreadON

; 74   : 		 AfxGetMainWnd()->PostMessage(WM_COMMAND, ID_THREAD_FINISHED);

	push	0
	push	32774					; 00008006H
	push	273					; 00000111H
	call	?AfxGetMainWnd@@YGPAVCWnd@@XZ		; AfxGetMainWnd
	mov	ecx, eax
	call	?PostMessageA@CWnd@@QAEHIIJ@Z		; CWnd::PostMessageA
$L124228:

; 77   : 	return 1;

	mov	eax, 1

; 78   : }

	mov	esp, ebp
	pop	ebp
	ret	0
?thread_callback@@YAHHPAUDrawData@@@Z ENDP		; thread_callback
_TEXT	ENDS
PUBLIC	?result_output@@YAXPBDPAD@Z			; result_output
EXTRN	??YCString@@QAEABV0@ABV0@@Z:NEAR		; CString::operator+=
EXTRN	?Replace@CString@@QAEHPBD0@Z:NEAR		; CString::Replace
EXTRN	?FormatV@CString@@QAEXPBDPAD@Z:NEAR		; CString::FormatV
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
_DATA	SEGMENT
	ORG $+2
$SG124240 DB	0dH, 0aH, 00H
	ORG $+1
$SG124241 DB	0aH, 00H
_DATA	ENDS
xdata$x	SEGMENT
$T127286 DD	019930520H
	DD	01H
	DD	FLAT:$T127289
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T127289 DD	0ffffffffH
	DD	FLAT:$L127282
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_format$ = 8
_argptr$ = 12
_str$ = -16
?result_output@@YAXPBDPAD@Z PROC NEAR			; result_output

; 81   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	$L127287
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx

; 82   : 	CString str;

	lea	ecx, DWORD PTR _str$[ebp]
	call	??0CString@@QAE@XZ			; CString::CString
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 83   : 	str.FormatV(format,argptr);

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _str$[ebp]
	call	?FormatV@CString@@QAEXPBDPAD@Z		; CString::FormatV

; 84   : 	str.Replace("\n","\r\n");

	push	OFFSET FLAT:$SG124240
	push	OFFSET FLAT:$SG124241
	lea	ecx, DWORD PTR _str$[ebp]
	call	?Replace@CString@@QAEHPBD0@Z		; CString::Replace

; 85   : 	gResultOutput += str;

	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	ecx, OFFSET FLAT:?gResultOutput@@3VCString@@A ; gResultOutput
	call	??YCString@@QAEABV0@ABV0@@Z		; CString::operator+=

; 86   : 
; 87   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1CString@@QAE@XZ			; CString::~CString
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
$L127282:
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1CString@@QAE@XZ			; CString::~CString
	ret	0
$L127287:
	mov	eax, OFFSET FLAT:$T127286
	jmp	___CxxFrameHandler
text$x	ENDS
?result_output@@YAXPBDPAD@Z ENDP			; result_output
PUBLIC	??0CWIChIDoc@@IAE@XZ				; CWIChIDoc::CWIChIDoc
PUBLIC	??2CObject@@SGPAXI@Z				; CObject::operator new
PUBLIC	??3CObject@@SGXPAX@Z				; CObject::operator delete
xdata$x	SEGMENT
$T127298 DD	019930520H
	DD	01H
	DD	FLAT:$T127300
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T127300 DD	0ffffffffH
	DD	FLAT:$L127296
xdata$x	ENDS
_TEXT	SEGMENT
$T127292 = -16
$T127293 = -20
__$EHRec$ = -12
?CreateObject@CWIChIDoc@@SGPAVCObject@@XZ PROC NEAR	; CWIChIDoc::CreateObject

; 91   : IMPLEMENT_DYNCREATE(CWIChIDoc, CDocument)

	push	ebp
	mov	ebp, esp
	push	-1
	push	$L127299
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 12					; 0000000cH
	push	580					; 00000244H
	call	??2CObject@@SGPAXI@Z			; CObject::operator new
	mov	DWORD PTR $T127293[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T127293[ebp], 0
	je	SHORT $L127294
	mov	ecx, DWORD PTR $T127293[ebp]
	call	??0CWIChIDoc@@IAE@XZ			; CWIChIDoc::CWIChIDoc
	mov	DWORD PTR -24+[ebp], eax
	jmp	SHORT $L127295
$L127294:
	mov	DWORD PTR -24+[ebp], 0
$L127295:
	mov	eax, DWORD PTR -24+[ebp]
	mov	DWORD PTR $T127292[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T127292[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
$L127296:
	mov	eax, DWORD PTR $T127293[ebp]
	push	eax
	call	??3CObject@@SGXPAX@Z			; CObject::operator delete
	ret	0
$L127299:
	mov	eax, OFFSET FLAT:$T127298
	jmp	___CxxFrameHandler
text$x	ENDS
?CreateObject@CWIChIDoc@@SGPAVCObject@@XZ ENDP		; CWIChIDoc::CreateObject
PUBLIC	?GetRuntimeClass@CWIChIDoc@@UBEPAUCRuntimeClass@@XZ ; CWIChIDoc::GetRuntimeClass
_TEXT	SEGMENT
_this$ = -4
?GetRuntimeClass@CWIChIDoc@@UBEPAUCRuntimeClass@@XZ PROC NEAR ; CWIChIDoc::GetRuntimeClass

; 91   : IMPLEMENT_DYNCREATE(CWIChIDoc, CDocument)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET FLAT:?classCWIChIDoc@CWIChIDoc@@2UCRuntimeClass@@B ; CWIChIDoc::classCWIChIDoc
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRuntimeClass@CWIChIDoc@@UBEPAUCRuntimeClass@@XZ ENDP ; CWIChIDoc::GetRuntimeClass
_TEXT	ENDS
PUBLIC	?GetMessageMap@CWIChIDoc@@MBEPBUAFX_MSGMAP@@XZ	; CWIChIDoc::GetMessageMap
_TEXT	SEGMENT
_this$ = -4
?GetMessageMap@CWIChIDoc@@MBEPBUAFX_MSGMAP@@XZ PROC NEAR ; CWIChIDoc::GetMessageMap

; 93   : BEGIN_MESSAGE_MAP(CWIChIDoc, CDocument)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, OFFSET FLAT:?messageMap@CWIChIDoc@@1UAFX_MSGMAP@@B ; CWIChIDoc::messageMap
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMessageMap@CWIChIDoc@@MBEPBUAFX_MSGMAP@@XZ ENDP	; CWIChIDoc::GetMessageMap
_TEXT	ENDS
PUBLIC	?OnNewDocument@CWIChIDoc@@UAEHXZ		; CWIChIDoc::OnNewDocument
PUBLIC	?Serialize@CWIChIDoc@@UAEXAAVCArchive@@@Z	; CWIChIDoc::Serialize
PUBLIC	??_7CWIChIDoc@@6B@				; CWIChIDoc::`vftable'
PUBLIC	??_GCWIChIDoc@@UAEPAXI@Z			; CWIChIDoc::`scalar deleting destructor'
PUBLIC	??_ECWIChIDoc@@UAEPAXI@Z			; CWIChIDoc::`vector deleting destructor'
PUBLIC	?IsModified@CDocument@@UAEHXZ			; CDocument::IsModified
PUBLIC	?SetModifiedFlag@CDocument@@UAEXH@Z		; CDocument::SetModifiedFlag
EXTRN	?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ:NEAR ; CCmdTarget::GetCommandMap
EXTRN	?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ:NEAR ; CCmdTarget::GetDispatchMap
EXTRN	?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ:NEAR ; CCmdTarget::GetConnectionMap
EXTRN	?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ:NEAR ; CCmdTarget::GetInterfaceMap
EXTRN	?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ:NEAR ; CCmdTarget::GetEventSinkMap
EXTRN	?OnCreateAggregates@CCmdTarget@@UAEHXZ:NEAR	; CCmdTarget::OnCreateAggregates
EXTRN	?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z:NEAR ; CCmdTarget::GetInterfaceHook
EXTRN	??0DlgOptions@@QAE@PAVCWnd@@@Z:NEAR		; DlgOptions::DlgOptions
EXTRN	?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z:NEAR ; CCmdTarget::GetExtraConnectionPoints
EXTRN	?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z:NEAR ; CCmdTarget::GetConnectionHook
EXTRN	??0CDocument@@QAE@XZ:NEAR			; CDocument::CDocument
EXTRN	?SetTitle@CDocument@@UAEXPBD@Z:NEAR		; CDocument::SetTitle
EXTRN	?SetPathName@CDocument@@UAEXPBDH@Z:NEAR		; CDocument::SetPathName
EXTRN	?GetFirstViewPosition@CDocument@@UBEPAU__POSITION@@XZ:NEAR ; CDocument::GetFirstViewPosition
EXTRN	?GetNextView@CDocument@@UBEPAVCView@@AAPAU__POSITION@@@Z:NEAR ; CDocument::GetNextView
EXTRN	?OnChangedViewList@CDocument@@UAEXXZ:NEAR	; CDocument::OnChangedViewList
EXTRN	?DeleteContents@CDocument@@UAEXXZ:NEAR		; CDocument::DeleteContents
EXTRN	?OnOpenDocument@CDocument@@UAEHPBD@Z:NEAR	; CDocument::OnOpenDocument
EXTRN	?OnSaveDocument@CDocument@@UAEHPBD@Z:NEAR	; CDocument::OnSaveDocument
EXTRN	?OnCloseDocument@CDocument@@UAEXXZ:NEAR		; CDocument::OnCloseDocument
EXTRN	?ReportSaveLoadException@CDocument@@UAEXPBDPAVCException@@HI@Z:NEAR ; CDocument::ReportSaveLoadException
EXTRN	?GetFile@CDocument@@UAEPAVCFile@@PBDIPAVCFileException@@@Z:NEAR ; CDocument::GetFile
EXTRN	?ReleaseFile@CDocument@@UAEXPAVCFile@@H@Z:NEAR	; CDocument::ReleaseFile
EXTRN	?CanCloseFrame@CDocument@@UAEHPAVCFrameWnd@@@Z:NEAR ; CDocument::CanCloseFrame
EXTRN	?SaveModified@CDocument@@UAEHXZ:NEAR		; CDocument::SaveModified
EXTRN	?PreCloseFrame@CDocument@@UAEXPAVCFrameWnd@@@Z:NEAR ; CDocument::PreCloseFrame
EXTRN	??1CDocument@@UAE@XZ:NEAR			; CDocument::~CDocument
EXTRN	?DoSave@CDocument@@UAEHPBDH@Z:NEAR		; CDocument::DoSave
EXTRN	?DoFileSave@CDocument@@UAEHXZ:NEAR		; CDocument::DoFileSave
EXTRN	?UpdateFrameCounts@CDocument@@UAEXXZ:NEAR	; CDocument::UpdateFrameCounts
EXTRN	?GetDefaultMenu@CDocument@@UAEPAUHMENU__@@XZ:NEAR ; CDocument::GetDefaultMenu
EXTRN	?GetDefaultAccelerator@CDocument@@UAEPAUHACCEL__@@XZ:NEAR ; CDocument::GetDefaultAccelerator
EXTRN	?OnIdle@CDocument@@UAEXXZ:NEAR			; CDocument::OnIdle
EXTRN	?OnFinalRelease@CDocument@@UAEXXZ:NEAR		; CDocument::OnFinalRelease
EXTRN	?OnCmdMsg@CDocument@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z:NEAR ; CDocument::OnCmdMsg
EXTRN	_SetFWPRINT:NEAR
EXTRN	?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z:NEAR	; CCmdTarget::IsInvokeAllowed
EXTRN	?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z:NEAR ; CCmdTarget::GetDispatchIID
EXTRN	?GetTypeInfoCount@CCmdTarget@@UAEIXZ:NEAR	; CCmdTarget::GetTypeInfoCount
EXTRN	?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ:NEAR ; CCmdTarget::GetTypeLibCache
EXTRN	?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z:NEAR ; CCmdTarget::GetTypeLib
;	COMDAT ??_7CWIChIDoc@@6B@
; File F:\IChI\wIChI\wIChIDoc.cpp
CONST	SEGMENT
??_7CWIChIDoc@@6B@ DD FLAT:?GetRuntimeClass@CWIChIDoc@@UBEPAUCRuntimeClass@@XZ ; CWIChIDoc::`vftable'
	DD	FLAT:??_ECWIChIDoc@@UAEPAXI@Z
	DD	FLAT:?Serialize@CWIChIDoc@@UAEXAAVCArchive@@@Z
	DD	FLAT:?OnCmdMsg@CDocument@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z
	DD	FLAT:?OnFinalRelease@CDocument@@UAEXXZ
	DD	FLAT:?IsInvokeAllowed@CCmdTarget@@UAEHJ@Z
	DD	FLAT:?GetDispatchIID@CCmdTarget@@UAEHPAU_GUID@@@Z
	DD	FLAT:?GetTypeInfoCount@CCmdTarget@@UAEIXZ
	DD	FLAT:?GetTypeLibCache@CCmdTarget@@UAEPAVCTypeLibCache@@XZ
	DD	FLAT:?GetTypeLib@CCmdTarget@@UAEJKPAPAUITypeLib@@@Z
	DD	FLAT:?GetMessageMap@CWIChIDoc@@MBEPBUAFX_MSGMAP@@XZ
	DD	FLAT:?GetCommandMap@CCmdTarget@@MBEPBUAFX_OLECMDMAP@@XZ
	DD	FLAT:?GetDispatchMap@CCmdTarget@@MBEPBUAFX_DISPMAP@@XZ
	DD	FLAT:?GetConnectionMap@CCmdTarget@@MBEPBUAFX_CONNECTIONMAP@@XZ
	DD	FLAT:?GetInterfaceMap@CCmdTarget@@MBEPBUAFX_INTERFACEMAP@@XZ
	DD	FLAT:?GetEventSinkMap@CCmdTarget@@MBEPBUAFX_EVENTSINKMAP@@XZ
	DD	FLAT:?OnCreateAggregates@CCmdTarget@@UAEHXZ
	DD	FLAT:?GetInterfaceHook@CCmdTarget@@UAEPAUIUnknown@@PBX@Z
	DD	FLAT:?GetExtraConnectionPoints@CCmdTarget@@MAEHPAVCPtrArray@@@Z
	DD	FLAT:?GetConnectionHook@CCmdTarget@@MAEPAUIConnectionPoint@@ABU_GUID@@@Z
	DD	FLAT:?SetTitle@CDocument@@UAEXPBD@Z
	DD	FLAT:?SetPathName@CDocument@@UAEXPBDH@Z
	DD	FLAT:?IsModified@CDocument@@UAEHXZ
	DD	FLAT:?SetModifiedFlag@CDocument@@UAEXH@Z
	DD	FLAT:?GetFirstViewPosition@CDocument@@UBEPAU__POSITION@@XZ
	DD	FLAT:?GetNextView@CDocument@@UBEPAVCView@@AAPAU__POSITION@@@Z
	DD	FLAT:?OnChangedViewList@CDocument@@UAEXXZ
	DD	FLAT:?DeleteContents@CDocument@@UAEXXZ
	DD	FLAT:?OnNewDocument@CWIChIDoc@@UAEHXZ
	DD	FLAT:?OnOpenDocument@CDocument@@UAEHPBD@Z
	DD	FLAT:?OnSaveDocument@CDocument@@UAEHPBD@Z
	DD	FLAT:?OnCloseDocument@CDocument@@UAEXXZ
	DD	FLAT:?ReportSaveLoadException@CDocument@@UAEXPBDPAVCException@@HI@Z
	DD	FLAT:?GetFile@CDocument@@UAEPAVCFile@@PBDIPAVCFileException@@@Z
	DD	FLAT:?ReleaseFile@CDocument@@UAEXPAVCFile@@H@Z
	DD	FLAT:?CanCloseFrame@CDocument@@UAEHPAVCFrameWnd@@@Z
	DD	FLAT:?SaveModified@CDocument@@UAEHXZ
	DD	FLAT:?PreCloseFrame@CDocument@@UAEXPAVCFrameWnd@@@Z
	DD	FLAT:?DoSave@CDocument@@UAEHPBDH@Z
	DD	FLAT:?DoFileSave@CDocument@@UAEHXZ
	DD	FLAT:?UpdateFrameCounts@CDocument@@UAEXXZ
	DD	FLAT:?GetDefaultMenu@CDocument@@UAEPAUHMENU__@@XZ
	DD	FLAT:?GetDefaultAccelerator@CDocument@@UAEPAUHACCEL__@@XZ
	DD	FLAT:?OnIdle@CDocument@@UAEXXZ
CONST	ENDS
xdata$x	SEGMENT
$T127307 DD	019930520H
	DD	01H
	DD	FLAT:$T127309
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T127309 DD	0ffffffffH
	DD	FLAT:$L127304
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -16
??0CWIChIDoc@@IAE@XZ PROC NEAR				; CWIChIDoc::CWIChIDoc

; 113  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	$L127308
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0CDocument@@QAE@XZ			; CDocument::CDocument
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??0DlgOptions@@QAE@PAVCWnd@@@Z		; DlgOptions::DlgOptions
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CWIChIDoc@@6B@ ; CWIChIDoc::`vftable'

; 114  : 	// TODO: add one-time construction code here
; 115  : 	m_pDrawData = NULL;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+80], 0

; 116  : 	m_pIChIParams = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+84], 0

; 117  : 	SetFWPRINT( result_output );

	push	OFFSET FLAT:?result_output@@YAXPBDPAD@Z	; result_output
	call	_SetFWPRINT
	add	esp, 4

; 118  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
$L127304:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDocument@@UAE@XZ			; CDocument::~CDocument
	ret	0
$L127308:
	mov	eax, OFFSET FLAT:$T127307
	jmp	___CxxFrameHandler
text$x	ENDS
??0CWIChIDoc@@IAE@XZ ENDP				; CWIChIDoc::CWIChIDoc
PUBLIC	??1CWIChIDoc@@UAE@XZ				; CWIChIDoc::~CWIChIDoc
;	COMDAT ??_GCWIChIDoc@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8
_this$ = -4
??_GCWIChIDoc@@UAEPAXI@Z PROC NEAR			; CWIChIDoc::`scalar deleting destructor', COMDAT
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CWIChIDoc@@UAE@XZ			; CWIChIDoc::~CWIChIDoc
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	test	eax, eax
	je	SHORT $L124313
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3CObject@@SGXPAX@Z			; CObject::operator delete
$L124313:
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCWIChIDoc@@UAEPAXI@Z ENDP				; CWIChIDoc::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1DlgOptions@@UAE@XZ				; DlgOptions::~DlgOptions
PUBLIC	?FreeIChI@CWIChIDoc@@IAEXXZ			; CWIChIDoc::FreeIChI
xdata$x	SEGMENT
$T127315 DD	019930520H
	DD	02H
	DD	FLAT:$T127317
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T127317 DD	0ffffffffH
	DD	FLAT:$L127312
	DD	00H
	DD	FLAT:$L127313
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -16
??1CWIChIDoc@@UAE@XZ PROC NEAR				; CWIChIDoc::~CWIChIDoc

; 121  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	$L127316
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET FLAT:??_7CWIChIDoc@@6B@ ; CWIChIDoc::`vftable'
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 122  : 	FreeIChI();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeIChI@CWIChIDoc@@IAEXXZ		; CWIChIDoc::FreeIChI

; 123  : 	::free_drawing_vec();

	call	?free_drawing_vec@@YAXXZ		; free_drawing_vec

; 124  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??1DlgOptions@@UAE@XZ			; DlgOptions::~DlgOptions
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDocument@@UAE@XZ			; CDocument::~CDocument
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
$L127312:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDocument@@UAE@XZ			; CDocument::~CDocument
	ret	0
$L127313:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	call	??1DlgOptions@@UAE@XZ			; DlgOptions::~DlgOptions
	ret	0
$L127316:
	mov	eax, OFFSET FLAT:$T127315
	jmp	___CxxFrameHandler
text$x	ENDS
??1CWIChIDoc@@UAE@XZ ENDP				; CWIChIDoc::~CWIChIDoc
PUBLIC	??1BrowseFileEdit@@UAE@XZ			; BrowseFileEdit::~BrowseFileEdit
EXTRN	??1CDialog@@UAE@XZ:NEAR				; CDialog::~CDialog
;	COMDAT xdata$x
xdata$x	SEGMENT
$T127330 DD	019930520H
	DD	09H
	DD	FLAT:$T127332
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T127332 DD	0ffffffffH
	DD	FLAT:$L127319
	DD	00H
	DD	FLAT:$L127320
	DD	01H
	DD	FLAT:$L127321
	DD	02H
	DD	FLAT:$L127322
	DD	03H
	DD	FLAT:$L127323
	DD	04H
	DD	FLAT:$L127324
	DD	05H
	DD	FLAT:$L127325
	DD	06H
	DD	FLAT:$L127326
	DD	07H
	DD	FLAT:$L127327
xdata$x	ENDS
;	COMDAT ??1DlgOptions@@UAE@XZ
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -16
??1DlgOptions@@UAE@XZ PROC NEAR				; DlgOptions::~DlgOptions, COMDAT
	push	ebp
	mov	ebp, esp
	push	-1
	push	$L127331
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 484				; 000001e4H
	call	??1CString@@QAE@XZ			; CString::~CString
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	??1CString@@QAE@XZ			; CString::~CString
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	??1CString@@QAE@XZ			; CString::~CString
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 472				; 000001d8H
	call	??1CString@@QAE@XZ			; CString::~CString
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 468				; 000001d4H
	call	??1CString@@QAE@XZ			; CString::~CString
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 356				; 00000164H
	call	??1BrowseFileEdit@@UAE@XZ		; BrowseFileEdit::~BrowseFileEdit
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 268				; 0000010cH
	call	??1BrowseFileEdit@@UAE@XZ		; BrowseFileEdit::~BrowseFileEdit
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 180				; 000000b4H
	call	??1BrowseFileEdit@@UAE@XZ		; BrowseFileEdit::~BrowseFileEdit
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	??1BrowseFileEdit@@UAE@XZ		; BrowseFileEdit::~BrowseFileEdit
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L127319:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CDialog@@UAE@XZ			; CDialog::~CDialog
	ret	0
$L127320:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 92					; 0000005cH
	call	??1BrowseFileEdit@@UAE@XZ		; BrowseFileEdit::~BrowseFileEdit
	ret	0
$L127321:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 180				; 000000b4H
	call	??1BrowseFileEdit@@UAE@XZ		; BrowseFileEdit::~BrowseFileEdit
	ret	0
$L127322:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 268				; 0000010cH
	call	??1BrowseFileEdit@@UAE@XZ		; BrowseFileEdit::~BrowseFileEdit
	ret	0
$L127323:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 356				; 00000164H
	call	??1BrowseFileEdit@@UAE@XZ		; BrowseFileEdit::~BrowseFileEdit
	ret	0
$L127324:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 468				; 000001d4H
	call	??1CString@@QAE@XZ			; CString::~CString
	ret	0
$L127325:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 472				; 000001d8H
	call	??1CString@@QAE@XZ			; CString::~CString
	ret	0
$L127326:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 476				; 000001dcH
	call	??1CString@@QAE@XZ			; CString::~CString
	ret	0
$L127327:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 480				; 000001e0H
	call	??1CString@@QAE@XZ			; CString::~CString
	ret	0
$L127331:
	mov	eax, OFFSET FLAT:$T127330
	jmp	___CxxFrameHandler
text$x	ENDS
??1DlgOptions@@UAE@XZ ENDP				; DlgOptions::~DlgOptions
PUBLIC	??1SECBrowseFileEdit@@UAE@XZ			; SECBrowseFileEdit::~SECBrowseFileEdit
;	COMDAT ??1BrowseFileEdit@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4
??1BrowseFileEdit@@UAE@XZ PROC NEAR			; BrowseFileEdit::~BrowseFileEdit, COMDAT
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SECBrowseFileEdit@@UAE@XZ		; SECBrowseFileEdit::~SECBrowseFileEdit
	mov	esp, ebp
	pop	ebp
	ret	0
??1BrowseFileEdit@@UAE@XZ ENDP				; BrowseFileEdit::~BrowseFileEdit
_TEXT	ENDS
EXTRN	??1SECBrowseEditBase@@UAE@XZ:NEAR		; SECBrowseEditBase::~SECBrowseEditBase
;	COMDAT xdata$x
xdata$x	SEGMENT
$T127343 DD	019930520H
	DD	03H
	DD	FLAT:$T127345
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T127345 DD	0ffffffffH
	DD	FLAT:$L127338
	DD	00H
	DD	FLAT:$L127339
	DD	01H
	DD	FLAT:$L127340
xdata$x	ENDS
;	COMDAT ??1SECBrowseFileEdit@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16
__$EHRec$ = -12
??1SECBrowseFileEdit@@UAE@XZ PROC NEAR			; SECBrowseFileEdit::~SECBrowseFileEdit, COMDAT
	push	ebp
	mov	ebp, esp
	push	-1
	push	$L127344
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	??1CString@@QAE@XZ			; CString::~CString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??1CString@@QAE@XZ			; CString::~CString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??1CString@@QAE@XZ			; CString::~CString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SECBrowseEditBase@@UAE@XZ		; SECBrowseEditBase::~SECBrowseEditBase
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L127338:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SECBrowseEditBase@@UAE@XZ		; SECBrowseEditBase::~SECBrowseEditBase
	ret	0
$L127339:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	call	??1CString@@QAE@XZ			; CString::~CString
	ret	0
$L127340:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 72					; 00000048H
	call	??1CString@@QAE@XZ			; CString::~CString
	ret	0
$L127344:
	mov	eax, OFFSET FLAT:$T127343
	jmp	___CxxFrameHandler
text$x	ENDS
??1SECBrowseFileEdit@@UAE@XZ ENDP			; SECBrowseFileEdit::~SECBrowseFileEdit
EXTRN	?OnNewDocument@CDocument@@UAEHXZ:NEAR		; CDocument::OnNewDocument
_TEXT	SEGMENT
_this$ = -4
?OnNewDocument@CWIChIDoc@@UAEHXZ PROC NEAR		; CWIChIDoc::OnNewDocument

; 127  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 128  : 	if (!CDocument::OnNewDocument())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnNewDocument@CDocument@@UAEHXZ	; CDocument::OnNewDocument
	test	eax, eax
	jne	SHORT $L124322

; 129  : 		return FALSE;

	xor	eax, eax
	jmp	SHORT $L124321
$L124322:

; 130  : 
; 131  : 	// TODO: add reinitialization code here
; 132  : 	// (SDI documents will reuse this document)
; 133  : 
; 134  : 	return TRUE;

	mov	eax, 1
$L124321:

; 135  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OnNewDocument@CWIChIDoc@@UAEHXZ ENDP			; CWIChIDoc::OnNewDocument
_TEXT	ENDS
PUBLIC	?IsStoring@CArchive@@QBEHXZ			; CArchive::IsStoring
_TEXT	SEGMENT
_ar$ = 8
_this$ = -4
?Serialize@CWIChIDoc@@UAEXAAVCArchive@@@Z PROC NEAR	; CWIChIDoc::Serialize

; 143  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 144  : 	if (ar.IsStoring())

	mov	ecx, DWORD PTR _ar$[ebp]
	call	?IsStoring@CArchive@@QBEHXZ		; CArchive::IsStoring

; 152  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?Serialize@CWIChIDoc@@UAEXAAVCArchive@@@Z ENDP		; CWIChIDoc::Serialize
_TEXT	ENDS
PUBLIC	?GetWIChIView@CWIChIDoc@@IAEPAVCWIChIView@@XZ	; CWIChIDoc::GetWIChIView
EXTRN	?classCWIChIView@CWIChIView@@2UCRuntimeClass@@B:BYTE ; CWIChIView::classCWIChIView
EXTRN	?IsKindOf@CObject@@QBEHPBUCRuntimeClass@@@Z:NEAR ; CObject::IsKindOf
_TEXT	SEGMENT
_this$ = -12
_pos$ = -4
_pView$124336 = -8
?GetWIChIView@CWIChIDoc@@IAEPAVCWIChIView@@XZ PROC NEAR	; CWIChIDoc::GetWIChIView

; 171  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 172  : 	POSITION pos = GetFirstViewPosition();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [edx+96]
	mov	DWORD PTR _pos$[ebp], eax
$L124334:

; 173  : 	while (pos != NULL)

	cmp	DWORD PTR _pos$[ebp], 0
	je	SHORT $L124335

; 175  :       CView* pView = GetNextView(pos);

	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [edx+100]
	mov	DWORD PTR _pView$124336[ebp], eax

; 176  :       if( pView->IsKindOf(RUNTIME_CLASS(CWIChIView)) )

	push	OFFSET FLAT:?classCWIChIView@CWIChIView@@2UCRuntimeClass@@B ; CWIChIView::classCWIChIView
	mov	ecx, DWORD PTR _pView$124336[ebp]
	call	?IsKindOf@CObject@@QBEHPBUCRuntimeClass@@@Z ; CObject::IsKindOf
	test	eax, eax
	je	SHORT $L124338

; 177  : 		  return (CWIChIView *) pView;

	mov	eax, DWORD PTR _pView$124336[ebp]
	jmp	SHORT $L124331
$L124338:

; 178  : 	}   

	jmp	SHORT $L124334
$L124335:

; 179  : 	return NULL;

	xor	eax, eax
$L124331:

; 180  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetWIChIView@CWIChIDoc@@IAEPAVCWIChIView@@XZ ENDP	; CWIChIDoc::GetWIChIView
_TEXT	ENDS
PUBLIC	?GetCEditView@CWIChIDoc@@IAEPAVCEditView@@XZ	; CWIChIDoc::GetCEditView
EXTRN	?classCEditView@CEditView@@2UCRuntimeClass@@B:BYTE ; CEditView::classCEditView
_TEXT	SEGMENT
_this$ = -12
_pos$ = -4
_pView$124347 = -8
?GetCEditView@CWIChIDoc@@IAEPAVCEditView@@XZ PROC NEAR	; CWIChIDoc::GetCEditView

; 183  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 184  : 	POSITION pos = GetFirstViewPosition();

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [edx+96]
	mov	DWORD PTR _pos$[ebp], eax
$L124345:

; 185  : 	while (pos != NULL)

	cmp	DWORD PTR _pos$[ebp], 0
	je	SHORT $L124346

; 187  :       CView* pView = GetNextView(pos);

	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [edx+100]
	mov	DWORD PTR _pView$124347[ebp], eax

; 188  :       if( pView->IsKindOf(RUNTIME_CLASS(CEditView)) )

	push	OFFSET FLAT:?classCEditView@CEditView@@2UCRuntimeClass@@B ; CEditView::classCEditView
	mov	ecx, DWORD PTR _pView$124347[ebp]
	call	?IsKindOf@CObject@@QBEHPBUCRuntimeClass@@@Z ; CObject::IsKindOf
	test	eax, eax
	je	SHORT $L124349

; 189  : 		  return (CEditView *) pView;

	mov	eax, DWORD PTR _pView$124347[ebp]
	jmp	SHORT $L124342
$L124349:

; 190  : 	}   

	jmp	SHORT $L124345
$L124346:

; 191  : 	return NULL;

	xor	eax, eax
$L124342:

; 192  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?GetCEditView@CWIChIDoc@@IAEPAVCEditView@@XZ ENDP	; CWIChIDoc::GetCEditView
_TEXT	ENDS
EXTRN	_free:NEAR
EXTRN	_CleanUp_:NEAR
_TEXT	SEGMENT
_this$ = -4
?FreeIChI@CWIChIDoc@@IAEXXZ PROC NEAR			; CWIChIDoc::FreeIChI

; 197  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 198  : 	if( m_pIChIParams )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $L124354

; 200  : 		CleanUp_(m_pIChIParams);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	push	edx
	call	_CleanUp_
	add	esp, 4

; 201  : 		free( m_pIChIParams );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_free
	add	esp, 4

; 202  : 		m_pIChIParams = NULL;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+84], 0
$L124354:

; 204  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?FreeIChI@CWIChIDoc@@IAEXXZ ENDP			; CWIChIDoc::FreeIChI
_TEXT	ENDS
PUBLIC	?GetLength@CString@@QBEHXZ			; CString::GetLength
PUBLIC	?IsEmpty@CString@@QBEHXZ			; CString::IsEmpty
PUBLIC	?GetSize@CStringArray@@QBEHXZ			; CStringArray::GetSize
PUBLIC	?Add@CStringArray@@QAEHPBD@Z			; CStringArray::Add
PUBLIC	?Add@CStringArray@@QAEHABVCString@@@Z		; CStringArray::Add
PUBLIC	??ACStringArray@@QAEAAVCString@@H@Z		; CStringArray::operator[]
EXTRN	??4CString@@QAEABV0@PBD@Z:NEAR			; CString::operator=
EXTRN	??YCString@@QAEABV0@PBD@Z:NEAR			; CString::operator+=
EXTRN	?Format@CString@@QAAXPBDZZ:NEAR			; CString::Format
EXTRN	?GetBuffer@CString@@QAEPADH@Z:NEAR		; CString::GetBuffer
EXTRN	?ReleaseBuffer@CString@@QAEXH@Z:NEAR		; CString::ReleaseBuffer
EXTRN	_calloc:NEAR
EXTRN	?MessageBoxA@CWnd@@QAEHPBD0I@Z:NEAR		; CWnd::MessageBoxA
EXTRN	??0CStringArray@@QAE@XZ:NEAR			; CStringArray::CStringArray
EXTRN	??1CStringArray@@UAE@XZ:NEAR			; CStringArray::~CStringArray
EXTRN	_Initialize_:NEAR
_BSS	SEGMENT
$SG124390 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
	ORG $+2
$SG124369 DB	'/B', 00H
	ORG $+1
$SG124371 DB	'/T', 00H
	ORG $+1
$SG124372 DB	'/I', 00H
	ORG $+1
$SG124374 DB	'/N', 00H
	ORG $+1
$SG124376 DB	'/S', 00H
	ORG $+1
$SG124378 DB	'/ALT', 00H
	ORG $+3
$SG124380 DB	'/W%d', 00H
	ORG $+3
$SG124382 DB	'/SDF', 00H
	ORG $+3
$SG124384 DB	':', 00H
	ORG $+2
$SG124386 DB	'/MOL', 00H
	ORG $+3
$SG124399 DB	'Error reading data.', 0aH, 'See log file for more inform'
	DB	'ation', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T127357 DD	019930520H
	DD	02H
	DD	FLAT:$T127359
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T127359 DD	0ffffffffH
	DD	FLAT:$L127354
	DD	00H
	DD	FLAT:$L127355
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -132
_str$124361 = -24
_ar$124362 = -128
_argv$124387 = -104
_i$124388 = -108
_argc$124389 = -20
_err$124394 = -16
?OnFileOpen@CWIChIDoc@@IAEXXZ PROC NEAR			; CWIChIDoc::OnFileOpen

; 211  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	$L127358
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 120				; 00000078H
	mov	DWORD PTR _this$[ebp], ecx

; 212  : 	// TODO: Add your command handler code here
; 213  : 	
; 214  : 	FreeIChI();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeIChI@CWIChIDoc@@IAEXXZ		; CWIChIDoc::FreeIChI

; 215  : 	if( m_Dlg.DoModal() == IDOK )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+88]
	call	DWORD PTR [edx+184]
	cmp	eax, 1
	jne	$L124358

; 217  : 		m_pIChIParams = (IChIParams *)calloc(sizeof(IChIParams), 1);

	push	1
	push	912					; 00000390H
	call	_calloc
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], eax

; 218  : 		CString str;

	lea	ecx, DWORD PTR _str$124361[ebp]
	call	??0CString@@QAE@XZ			; CString::CString
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 219  : 		CStringArray ar;

	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	??0CStringArray@@QAE@XZ			; CStringArray::CStringArray
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 220  : 		ar.Add(m_Dlg.m_InputFile);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 556				; 0000022cH
	push	edx
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	?Add@CStringArray@@QAEHABVCString@@@Z	; CStringArray::Add

; 221  : 
; 222  : 		if(!m_Dlg.m_OutputFile.IsEmpty() || !m_Dlg.m_LogFile.IsEmpty() || !m_Dlg.m_ProblemFile.IsEmpty())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 564				; 00000234H
	call	?IsEmpty@CString@@QBEHXZ		; CString::IsEmpty
	test	eax, eax
	je	SHORT $L124364
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	call	?IsEmpty@CString@@QBEHXZ		; CString::IsEmpty
	test	eax, eax
	je	SHORT $L124364
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 568				; 00000238H
	call	?IsEmpty@CString@@QBEHXZ		; CString::IsEmpty
	test	eax, eax
	jne	SHORT $L124363
$L124364:

; 223  : 			ar.Add(m_Dlg.m_OutputFile);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 564				; 00000234H
	push	eax
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	?Add@CStringArray@@QAEHABVCString@@@Z	; CStringArray::Add
$L124363:

; 224  : 		if(!m_Dlg.m_LogFile.IsEmpty() || !m_Dlg.m_ProblemFile.IsEmpty())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	call	?IsEmpty@CString@@QBEHXZ		; CString::IsEmpty
	test	eax, eax
	je	SHORT $L124366
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 568				; 00000238H
	call	?IsEmpty@CString@@QBEHXZ		; CString::IsEmpty
	test	eax, eax
	jne	SHORT $L124365
$L124366:

; 225  : 			ar.Add(m_Dlg.m_LogFile);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 560				; 00000230H
	push	ecx
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	?Add@CStringArray@@QAEHABVCString@@@Z	; CStringArray::Add
$L124365:

; 226  : 		if(!m_Dlg.m_ProblemFile.IsEmpty())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 568				; 00000238H
	call	?IsEmpty@CString@@QBEHXZ		; CString::IsEmpty
	test	eax, eax
	jne	SHORT $L124367

; 227  : 			ar.Add(m_Dlg.m_ProblemFile);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 568				; 00000238H
	push	edx
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	?Add@CStringArray@@QAEHABVCString@@@Z	; CStringArray::Add
$L124367:

; 228  : 		if(m_Dlg.m_bBasic)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+536], 0
	je	SHORT $L124368

; 229  : 			ar.Add("/B");

	push	OFFSET FLAT:$SG124369
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	?Add@CStringArray@@QAEHPBD@Z		; CStringArray::Add
$L124368:

; 230  : 		if(m_Dlg.m_bTautomer)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+552], 0
	je	SHORT $L124370

; 231  : 			ar.Add("/T");

	push	OFFSET FLAT:$SG124371
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	?Add@CStringArray@@QAEHPBD@Z		; CStringArray::Add
$L124370:

; 232  : 		ar.Add("/I");

	push	OFFSET FLAT:$SG124372
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	?Add@CStringArray@@QAEHPBD@Z		; CStringArray::Add

; 233  : 		if(m_Dlg.m_bIsotop)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+540], 0
	je	SHORT $L124373

; 234  : 			ar.Add("/N");

	push	OFFSET FLAT:$SG124374
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	?Add@CStringArray@@QAEHPBD@Z		; CStringArray::Add
$L124373:

; 235  : 		if(m_Dlg.m_bStereo)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+548], 0
	je	SHORT $L124375

; 236  : 			ar.Add("/S");

	push	OFFSET FLAT:$SG124376
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	?Add@CStringArray@@QAEHPBD@Z		; CStringArray::Add
$L124375:

; 237  : 		if(m_Dlg.m_bShort)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+544], 0
	je	SHORT $L124377

; 238  : 			ar.Add("/ALT");

	push	OFFSET FLAT:$SG124378
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	?Add@CStringArray@@QAEHPBD@Z		; CStringArray::Add
$L124377:

; 239  : 		if(m_Dlg.m_Timeout)

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+576], 0
	je	SHORT $L124379

; 241  : 			str.Format("/W%d",m_Dlg.m_Timeout);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+576]
	push	ecx
	push	OFFSET FLAT:$SG124380
	lea	edx, DWORD PTR _str$124361[ebp]
	push	edx
	call	?Format@CString@@QAAXPBDZZ		; CString::Format
	add	esp, 12					; 0000000cH

; 242  : 			ar.Add(str);

	lea	eax, DWORD PTR _str$124361[ebp]
	push	eax
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	?Add@CStringArray@@QAEHABVCString@@@Z	; CStringArray::Add
$L124379:

; 244  : 		if(m_Dlg.m_bSDF)

	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+532], 0
	je	SHORT $L124381

; 246  : 			str= "/SDF";

	push	OFFSET FLAT:$SG124382
	lea	ecx, DWORD PTR _str$124361[ebp]
	call	??4CString@@QAEABV0@PBD@Z		; CString::operator=

; 247  : 			if( !m_Dlg.m_Header.IsEmpty() )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 572				; 0000023cH
	call	?IsEmpty@CString@@QBEHXZ		; CString::IsEmpty
	test	eax, eax
	jne	SHORT $L124383

; 249  : 			   str+=":";

	push	OFFSET FLAT:$SG124384
	lea	ecx, DWORD PTR _str$124361[ebp]
	call	??YCString@@QAEABV0@PBD@Z		; CString::operator+=

; 250  : 			   str += m_Dlg.m_Header;

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 572				; 0000023cH
	push	edx
	lea	ecx, DWORD PTR _str$124361[ebp]
	call	??YCString@@QAEABV0@ABV0@@Z		; CString::operator+=
$L124383:

; 254  : 		else

	jmp	SHORT $L124385
$L124381:

; 255  : 			ar.Add("/MOL");

	push	OFFSET FLAT:$SG124386
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	?Add@CStringArray@@QAEHPBD@Z		; CStringArray::Add
$L124385:

; 256  : 		
; 257  : 		char * argv[20];
; 258  : 		int i, argc = ar.GetSize() +1;

	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	?GetSize@CStringArray@@QBEHXZ		; CStringArray::GetSize
	add	eax, 1
	mov	DWORD PTR _argc$124389[ebp], eax

; 259  : 		argv[0] = "";

	mov	DWORD PTR _argv$124387[ebp], OFFSET FLAT:$SG124390

; 260  : 		for( i = 0; i < ar.GetSize(); i++ )

	mov	DWORD PTR _i$124388[ebp], 0
	jmp	SHORT $L124391
$L124392:
	mov	eax, DWORD PTR _i$124388[ebp]
	add	eax, 1
	mov	DWORD PTR _i$124388[ebp], eax
$L124391:
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	?GetSize@CStringArray@@QBEHXZ		; CStringArray::GetSize
	cmp	DWORD PTR _i$124388[ebp], eax
	jge	SHORT $L124393

; 262  : 			argv[i+1] = ar[i].GetBuffer(ar[i].GetLength());

	mov	ecx, DWORD PTR _i$124388[ebp]
	push	ecx
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	??ACStringArray@@QAEAAVCString@@H@Z	; CStringArray::operator[]
	mov	ecx, eax
	call	?GetLength@CString@@QBEHXZ		; CString::GetLength
	push	eax
	mov	edx, DWORD PTR _i$124388[ebp]
	push	edx
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	??ACStringArray@@QAEAAVCString@@H@Z	; CStringArray::operator[]
	mov	ecx, eax
	call	?GetBuffer@CString@@QAEPADH@Z		; CString::GetBuffer
	mov	ecx, DWORD PTR _i$124388[ebp]
	mov	DWORD PTR _argv$124387[ebp+ecx*4+4], eax

; 263  : 		}

	jmp	SHORT $L124392
$L124393:

; 264  : 		int err = !::Initialize_(argc, argv, m_pIChIParams );

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	push	eax
	lea	ecx, DWORD PTR _argv$124387[ebp]
	push	ecx
	mov	edx, DWORD PTR _argc$124389[ebp]
	push	edx
	call	_Initialize_
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	inc	eax
	mov	DWORD PTR _err$124394[ebp], eax

; 265  : 		for( i = 0; i < ar.GetSize(); i++ )

	mov	DWORD PTR _i$124388[ebp], 0
	jmp	SHORT $L124395
$L124396:
	mov	eax, DWORD PTR _i$124388[ebp]
	add	eax, 1
	mov	DWORD PTR _i$124388[ebp], eax
$L124395:
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	?GetSize@CStringArray@@QBEHXZ		; CStringArray::GetSize
	cmp	DWORD PTR _i$124388[ebp], eax
	jge	SHORT $L124397

; 267  : 			ar[i].ReleaseBuffer();

	push	-1
	mov	ecx, DWORD PTR _i$124388[ebp]
	push	ecx
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	??ACStringArray@@QAEAAVCString@@H@Z	; CStringArray::operator[]
	mov	ecx, eax
	call	?ReleaseBuffer@CString@@QAEXH@Z		; CString::ReleaseBuffer

; 268  : 		}

	jmp	SHORT $L124396
$L124397:

; 269  : 		if( err )

	cmp	DWORD PTR _err$124394[ebp], 0
	je	SHORT $L124398

; 271  : 			AfxGetMainWnd()->MessageBox("Error reading data.\nSee log file for more information");

	push	0
	push	0
	push	OFFSET FLAT:$SG124399
	call	?AfxGetMainWnd@@YGPAVCWnd@@XZ		; AfxGetMainWnd
	mov	ecx, eax
	call	?MessageBoxA@CWnd@@QAEHPBD0I@Z		; CWnd::MessageBoxA

; 272  : 			FreeIChI();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeIChI@CWIChIDoc@@IAEXXZ		; CWIChIDoc::FreeIChI

; 273  : 			return;

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _str$124361[ebp]
	call	??1CString@@QAE@XZ			; CString::~CString
	jmp	SHORT $L124357
$L124398:

; 276  : 			OnViewNextStru();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?OnViewNextStru@CWIChIDoc@@IAEXXZ	; CWIChIDoc::OnViewNextStru

; 277  : 	}

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _str$124361[ebp]
	call	??1CString@@QAE@XZ			; CString::~CString
$L124358:
$L124357:

; 278  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
$L127354:
	lea	ecx, DWORD PTR _str$124361[ebp]
	call	??1CString@@QAE@XZ			; CString::~CString
	ret	0
$L127355:
	lea	ecx, DWORD PTR _ar$124362[ebp]
	call	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
	ret	0
$L127358:
	mov	eax, OFFSET FLAT:$T127357
	jmp	___CxxFrameHandler
text$x	ENDS
?OnFileOpen@CWIChIDoc@@IAEXXZ ENDP			; CWIChIDoc::OnFileOpen
PUBLIC	??BCString@@QBEPBDXZ				; CString::operator char const *
PUBLIC	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ		; CWnd::GetSafeHwnd
PUBLIC	?UpdateWindow@CWnd@@QAEXXZ			; CWnd::UpdateWindow
PUBLIC	?Invalidate@CWnd@@QAEXH@Z			; CWnd::Invalidate
EXTRN	?Empty@CString@@QAEXXZ:NEAR			; CString::Empty
EXTRN	__imp__SetWindowTextA@8:NEAR
EXTRN	_GetNextStructure_:NEAR
_BSS	SEGMENT
	ALIGN	4

$SG124412 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
	ORG $+2
$SG124407 DB	'Cannot get next structure', 0aH, 'Wrong format or end of'
	DB	' file has been reached', 00H
_DATA	ENDS
xdata$x	SEGMENT
$T127363 DD	019930520H
	DD	01H
	DD	FLAT:$T127365
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T127365 DD	0ffffffffH
	DD	FLAT:$L127361
xdata$x	ENDS
_TEXT	SEGMENT
__$EHRec$ = -12
_this$ = -28
_Title$ = -20
_pDrawData$ = -24
_pView$ = -16
?OnViewNextStru@CWIChIDoc@@IAEXXZ PROC NEAR		; CWIChIDoc::OnViewNextStru

; 282  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	$L127364
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	sub	esp, 16					; 00000010H
	mov	DWORD PTR _this$[ebp], ecx

; 283  : 	// TODO: Add your command handler code here
; 284  : 	::free_drawing_vec();

	call	?free_drawing_vec@@YAXXZ		; free_drawing_vec

; 285  : 	gResultOutput.Empty();

	mov	ecx, OFFSET FLAT:?gResultOutput@@3VCString@@A ; gResultOutput
	call	?Empty@CString@@QAEXXZ			; CString::Empty

; 286  : 	m_pDrawData = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0

; 287  : 	CString Title;

	lea	ecx, DWORD PTR _Title$[ebp]
	call	??0CString@@QAE@XZ			; CString::CString
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 288  : 	
; 289  : 	DrawData * pDrawData = ::GetNextStructure_(m_pIChIParams);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	push	edx
	call	_GetNextStructure_
	add	esp, 4
	mov	DWORD PTR _pDrawData$[ebp], eax

; 290  : 	if( !pDrawData )

	cmp	DWORD PTR _pDrawData$[ebp], 0
	jne	SHORT $L124406

; 292  : 		AfxGetMainWnd()->MessageBox("Cannot get next structure\nWrong format or end of file has been reached");

	push	0
	push	0
	push	OFFSET FLAT:$SG124407
	call	?AfxGetMainWnd@@YGPAVCWnd@@XZ		; AfxGetMainWnd
	mov	ecx, eax
	call	?MessageBoxA@CWnd@@QAEHPBD0I@Z		; CWnd::MessageBoxA

; 293  : 		FreeIChI();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FreeIChI@CWIChIDoc@@IAEXXZ		; CWIChIDoc::FreeIChI

; 295  : 	else

	jmp	SHORT $L124408
$L124406:

; 297  : 		add_to_drawing_vec(pDrawData);

	mov	eax, DWORD PTR _pDrawData$[ebp]
	push	eax
	call	?add_to_drawing_vec@@YAXPAUDrawData@@@Z	; add_to_drawing_vec
	add	esp, 4

; 298  : 		m_pDrawData = pDrawData;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _pDrawData$[ebp]
	mov	DWORD PTR [ecx+80], edx

; 299  : 		Title = pDrawData->szTitle;

	mov	eax, DWORD PTR _pDrawData$[ebp]
	add	eax, 4
	push	eax
	lea	ecx, DWORD PTR _Title$[ebp]
	call	??4CString@@QAEABV0@PBD@Z		; CString::operator=
$L124408:

; 301  : 	SetTitle(Title);

	lea	ecx, DWORD PTR _Title$[ebp]
	call	??BCString@@QBEPBDXZ			; CString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [edx+80]

; 302  : 	CView * pView = GetWIChIView();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetWIChIView@CWIChIDoc@@IAEPAVCWIChIView@@XZ ; CWIChIDoc::GetWIChIView
	mov	DWORD PTR _pView$[ebp], eax

; 303  : 	if( pView )

	cmp	DWORD PTR _pView$[ebp], 0
	je	SHORT $L124410

; 305  : 		pView->Invalidate();

	push	1
	mov	ecx, DWORD PTR _pView$[ebp]
	call	?Invalidate@CWnd@@QAEXH@Z		; CWnd::Invalidate

; 306  : 		pView->UpdateWindow();

	mov	ecx, DWORD PTR _pView$[ebp]
	call	?UpdateWindow@CWnd@@QAEXXZ		; CWnd::UpdateWindow
$L124410:

; 308  : 	pView = GetCEditView();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCEditView@CWIChIDoc@@IAEPAVCEditView@@XZ ; CWIChIDoc::GetCEditView
	mov	DWORD PTR _pView$[ebp], eax

; 309  : 	if( pView )

	cmp	DWORD PTR _pView$[ebp], 0
	je	SHORT $L124411

; 311  : 		::SetWindowText(pView->GetSafeHwnd(), "");

	push	OFFSET FLAT:$SG124412
	mov	ecx, DWORD PTR _pView$[ebp]
	call	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ	; CWnd::GetSafeHwnd
	push	eax
	call	DWORD PTR __imp__SetWindowTextA@8

; 312  : 		pView->UpdateWindow();

	mov	ecx, DWORD PTR _pView$[ebp]
	call	?UpdateWindow@CWnd@@QAEXXZ		; CWnd::UpdateWindow
$L124411:

; 314  : 
; 315  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _Title$[ebp]
	call	??1CString@@QAE@XZ			; CString::~CString
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:__except_list, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
$L127361:
	lea	ecx, DWORD PTR _Title$[ebp]
	call	??1CString@@QAE@XZ			; CString::~CString
	ret	0
$L127364:
	mov	eax, OFFSET FLAT:$T127363
	jmp	___CxxFrameHandler
text$x	ENDS
?OnViewNextStru@CWIChIDoc@@IAEXXZ ENDP			; CWIChIDoc::OnViewNextStru
_TEXT	SEGMENT
_pCmdUI$ = 8
_this$ = -4
?OnUpdateViewNextStru@CWIChIDoc@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CWIChIDoc::OnUpdateViewNextStru

; 318  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 319  : 	// TODO: Add your command update UI handler code here
; 320  : 	
; 321  : 	pCmdUI->Enable( m_pIChIParams != NULL && !gbThreadON );

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $L127367
	cmp	DWORD PTR ?gbThreadON@@3HA, 0		; gbThreadON
	jne	SHORT $L127367
	mov	DWORD PTR -8+[ebp], 1
	jmp	SHORT $L127368
$L127367:
	mov	DWORD PTR -8+[ebp], 0
$L127368:
	mov	ecx, DWORD PTR -8+[ebp]
	push	ecx
	mov	edx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [eax]

; 322  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateViewNextStru@CWIChIDoc@@IAEXPAVCCmdUI@@@Z ENDP	; CWIChIDoc::OnUpdateViewNextStru
_TEXT	ENDS
EXTRN	?ThreadFunction@@YAIPAX@Z:NEAR			; ThreadFunction
EXTRN	?SetPaneText@CStatusBar@@QAEHHPBDH@Z:NEAR	; CStatusBar::SetPaneText
EXTRN	?AfxBeginThread@@YGPAVCWinThread@@P6AIPAX@Z0HIKPAU_SECURITY_ATTRIBUTES@@@Z:NEAR ; AfxBeginThread
_DATA	SEGMENT
	ORG $+1
$SG124421 DB	'Working..', 00H
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -4
?OnViewAnalize@CWIChIDoc@@IAEXXZ PROC NEAR		; CWIChIDoc::OnViewAnalize

; 327  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 328  : 	// TODO: Add your command handler code here
; 329  : 	gThreadData.pIChIParams = m_pIChIParams;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR ?gThreadData@@3UThreadData@@A, ecx

; 330  : 	gThreadData.pf =thread_callback; 

	mov	DWORD PTR ?gThreadData@@3UThreadData@@A+4, OFFSET FLAT:?thread_callback@@YAHHPAUDrawData@@@Z ; thread_callback

; 331  : 
; 332  : 	((CMainFrame *)AfxGetMainWnd())->m_wndStatusBar.SetPaneText( 0, "Working.." );

	push	1
	push	OFFSET FLAT:$SG124421
	push	0
	call	?AfxGetMainWnd@@YGPAVCWnd@@XZ		; AfxGetMainWnd
	mov	ecx, eax
	add	ecx, 384				; 00000180H
	call	?SetPaneText@CStatusBar@@QAEHHPBDH@Z	; CStatusBar::SetPaneText

; 333  : 
; 334  : 	::AfxBeginThread( ThreadFunction,&gThreadData);

	push	0
	push	0
	push	0
	push	0
	push	OFFSET FLAT:?gThreadData@@3UThreadData@@A ; gThreadData
	push	OFFSET FLAT:?ThreadFunction@@YAIPAX@Z	; ThreadFunction
	call	?AfxBeginThread@@YGPAVCWinThread@@P6AIPAX@Z0HIKPAU_SECURITY_ATTRIBUTES@@@Z ; AfxBeginThread

; 335  : 
; 336  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OnViewAnalize@CWIChIDoc@@IAEXXZ ENDP			; CWIChIDoc::OnViewAnalize
_pCmdUI$ = 8
_this$ = -4
?OnUpdateViewAnalize@CWIChIDoc@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CWIChIDoc::OnUpdateViewAnalize

; 339  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 340  : 	// TODO: Add your command update UI handler code here
; 341  : 	pCmdUI->Enable( m_pIChIParams != NULL && !gbThreadON);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $L127371
	cmp	DWORD PTR ?gbThreadON@@3HA, 0		; gbThreadON
	jne	SHORT $L127371
	mov	DWORD PTR -8+[ebp], 1
	jmp	SHORT $L127372
$L127371:
	mov	DWORD PTR -8+[ebp], 0
$L127372:
	mov	ecx, DWORD PTR -8+[ebp]
	push	ecx
	mov	edx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [eax]

; 342  : 	
; 343  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateViewAnalize@CWIChIDoc@@IAEXPAVCCmdUI@@@Z ENDP	; CWIChIDoc::OnUpdateViewAnalize
_TEXT	ENDS
_DATA	SEGMENT
	ORG $+2
$SG124432 DB	'Erorr processing structure', 00H
	ORG $+1
$SG124436 DB	'Ready', 00H
_DATA	ENDS
_TEXT	SEGMENT
_this$ = -8
_pView$ = -4
?OnThreadFinished@CWIChIDoc@@IAEXXZ PROC NEAR		; CWIChIDoc::OnThreadFinished

; 346  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx

; 347  : 	// TODO: Add your command handler code here
; 348  : 	CEditView *pView = GetCEditView();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetCEditView@CWIChIDoc@@IAEPAVCEditView@@XZ ; CWIChIDoc::GetCEditView
	mov	DWORD PTR _pView$[ebp], eax

; 349  : 	if( pView )

	cmp	DWORD PTR _pView$[ebp], 0
	je	SHORT $L124430

; 351  : 		if( m_pIChIParams->nErrorCode )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	cmp	DWORD PTR [ecx+32], 0
	je	SHORT $L124431

; 352  : 			::SetWindowText(pView->GetSafeHwnd(), "Erorr processing structure");

	push	OFFSET FLAT:$SG124432
	mov	ecx, DWORD PTR _pView$[ebp]
	call	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ	; CWnd::GetSafeHwnd
	push	eax
	call	DWORD PTR __imp__SetWindowTextA@8

; 353  : 		else

	jmp	SHORT $L124433
$L124431:

; 354  : 			::SetWindowText(pView->GetSafeHwnd(), (LPCSTR)gResultOutput);

	mov	ecx, OFFSET FLAT:?gResultOutput@@3VCString@@A ; gResultOutput
	call	??BCString@@QBEPBDXZ			; CString::operator char const *
	push	eax
	mov	ecx, DWORD PTR _pView$[ebp]
	call	?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ	; CWnd::GetSafeHwnd
	push	eax
	call	DWORD PTR __imp__SetWindowTextA@8
$L124433:

; 355  : 
; 356  : 	   pView->UpdateWindow();

	mov	ecx, DWORD PTR _pView$[ebp]
	call	?UpdateWindow@CWnd@@QAEXXZ		; CWnd::UpdateWindow
$L124430:

; 358  : 	((CMainFrame *)AfxGetMainWnd())->m_wndStatusBar.SetPaneText( 0, "Ready" );

	push	1
	push	OFFSET FLAT:$SG124436
	push	0
	call	?AfxGetMainWnd@@YGPAVCWnd@@XZ		; AfxGetMainWnd
	mov	ecx, eax
	add	ecx, 384				; 00000180H
	call	?SetPaneText@CStatusBar@@QAEHHPBDH@Z	; CStatusBar::SetPaneText

; 359  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OnThreadFinished@CWIChIDoc@@IAEXXZ ENDP		; CWIChIDoc::OnThreadFinished
_this$ = -12
_nIndex$ = -8
_pView$ = -4
?OnViewNext@CWIChIDoc@@IAEXXZ PROC NEAR			; CWIChIDoc::OnViewNext

; 362  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 363  : 	// TODO: Add your command handler code here
; 364  : 	int nIndex = ::find_index(m_pDrawData);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	call	?find_index@@YAHPAUDrawData@@@Z		; find_index
	add	esp, 4
	mov	DWORD PTR _nIndex$[ebp], eax

; 365  : 	m_pDrawData = gDrawingVec[nIndex+1];

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _nIndex$[ebp]
	mov	ecx, DWORD PTR ?gDrawingVec@@3PAPAUDrawData@@A[eax*4+4]
	mov	DWORD PTR [edx+80], ecx

; 366  : 
; 367  : 	SetTitle(m_pDrawData->szTitle);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [edx+80]

; 368  : 	CView * pView = GetWIChIView();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetWIChIView@CWIChIDoc@@IAEPAVCWIChIView@@XZ ; CWIChIDoc::GetWIChIView
	mov	DWORD PTR _pView$[ebp], eax

; 369  : 	if( pView )

	cmp	DWORD PTR _pView$[ebp], 0
	je	SHORT $L124442

; 371  : 		pView->Invalidate();

	push	1
	mov	ecx, DWORD PTR _pView$[ebp]
	call	?Invalidate@CWnd@@QAEXH@Z		; CWnd::Invalidate

; 372  : 		pView->UpdateWindow();

	mov	ecx, DWORD PTR _pView$[ebp]
	call	?UpdateWindow@CWnd@@QAEXXZ		; CWnd::UpdateWindow
$L124442:

; 374  : 	
; 375  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OnViewNext@CWIChIDoc@@IAEXXZ ENDP			; CWIChIDoc::OnViewNext
_pCmdUI$ = 8
_this$ = -8
_nIndex$ = -4
?OnUpdateViewNext@CWIChIDoc@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CWIChIDoc::OnUpdateViewNext

; 378  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 379  : 	// TODO: Add your command update UI handler code here
; 380  : 	int nIndex = ::find_index(m_pDrawData);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	call	?find_index@@YAHPAUDrawData@@@Z		; find_index
	add	esp, 4
	mov	DWORD PTR _nIndex$[ebp], eax

; 381  : 
; 382  : 	pCmdUI->Enable( m_pIChIParams != NULL && nIndex != -1 && nIndex < gSizeDrawingVec - 1 );

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+84], 0
	je	SHORT $L127376
	cmp	DWORD PTR _nIndex$[ebp], -1
	je	SHORT $L127376
	mov	eax, DWORD PTR ?gSizeDrawingVec@@3HA	; gSizeDrawingVec
	sub	eax, 1
	cmp	DWORD PTR _nIndex$[ebp], eax
	jge	SHORT $L127376
	mov	DWORD PTR -12+[ebp], 1
	jmp	SHORT $L127377
$L127376:
	mov	DWORD PTR -12+[ebp], 0
$L127377:
	mov	ecx, DWORD PTR -12+[ebp]
	push	ecx
	mov	edx, DWORD PTR _pCmdUI$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [eax]

; 383  : 	
; 384  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateViewNext@CWIChIDoc@@IAEXPAVCCmdUI@@@Z ENDP	; CWIChIDoc::OnUpdateViewNext
_this$ = -12
_nIndex$ = -8
_pView$ = -4
?OnViewPrevios@CWIChIDoc@@IAEXXZ PROC NEAR		; CWIChIDoc::OnViewPrevios

; 387  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 388  : 	// TODO: Add your command handler code here
; 389  : 	int nIndex = ::find_index(m_pDrawData);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	call	?find_index@@YAHPAUDrawData@@@Z		; find_index
	add	esp, 4
	mov	DWORD PTR _nIndex$[ebp], eax

; 390  : 	m_pDrawData = gDrawingVec[nIndex-1];

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _nIndex$[ebp]
	mov	ecx, DWORD PTR ?gDrawingVec@@3PAPAUDrawData@@A[eax*4-4]
	mov	DWORD PTR [edx+80], ecx

; 391  : 	SetTitle(m_pDrawData->szTitle);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR [edx+80]

; 392  : 	CView * pView = GetWIChIView();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetWIChIView@CWIChIDoc@@IAEPAVCWIChIView@@XZ ; CWIChIDoc::GetWIChIView
	mov	DWORD PTR _pView$[ebp], eax

; 393  : 	if( pView )

	cmp	DWORD PTR _pView$[ebp], 0
	je	SHORT $L124453

; 395  : 		pView->Invalidate();

	push	1
	mov	ecx, DWORD PTR _pView$[ebp]
	call	?Invalidate@CWnd@@QAEXH@Z		; CWnd::Invalidate

; 396  : 		pView->UpdateWindow();

	mov	ecx, DWORD PTR _pView$[ebp]
	call	?UpdateWindow@CWnd@@QAEXXZ		; CWnd::UpdateWindow
$L124453:

; 398  : 	
; 399  : }

	mov	esp, ebp
	pop	ebp
	ret	0
?OnViewPrevios@CWIChIDoc@@IAEXXZ ENDP			; CWIChIDoc::OnViewPrevios
_pCmdUI$ = 8
_this$ = -8
_nIndex$ = -4
?OnUpdateViewPrevios@CWIChIDoc@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CWIChIDoc::OnUpdateViewPrevios

; 402  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR _this$[ebp], ecx

; 403  : 	// TODO: Add your command update UI handler code here
; 404  : 	int nIndex = ::find_index(m_pDrawData);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	call	?find_index@@YAHPAUDrawData@@@Z		; find_index
	add	esp, 4
	mov	DWORD PTR _nIndex$[ebp], eax

; 405  : 
; 406  : 	pCmdUI->Enable( m_pIChIParams != NULL && nIndex != -1 && nIndex > 0 );

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+84], 0
	je	SHORT $L127380
	cmp	DWORD PTR _nIndex$[ebp], -1
	je	SHORT $L127380
	cmp	DWORD PTR _nIndex$[ebp], 0
	jle	SHORT $L127380
	mov	DWORD PTR -12+[ebp], 1
	jmp	SHORT $L127381
$L127380:
	mov	DWORD PTR -12+[ebp], 0
$L127381:
	mov	eax, DWORD PTR -12+[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]

; 407  : 	
; 408  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateViewPrevios@CWIChIDoc@@IAEXPAVCCmdUI@@@Z ENDP	; CWIChIDoc::OnUpdateViewPrevios
_pCmdUI$ = 8
_this$ = -4
?OnUpdateFileOpen@CWIChIDoc@@IAEXPAVCCmdUI@@@Z PROC NEAR ; CWIChIDoc::OnUpdateFileOpen

; 411  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 412  : 	// TODO: Add your command update UI handler code here
; 413  : 	pCmdUI->Enable( !gbThreadON );

	xor	eax, eax
	cmp	DWORD PTR ?gbThreadON@@3HA, 0		; gbThreadON
	sete	al
	push	eax
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _pCmdUI$[ebp]
	call	DWORD PTR [edx]

; 414  : 	
; 415  : }

	mov	esp, ebp
	pop	ebp
	ret	4
?OnUpdateFileOpen@CWIChIDoc@@IAEXPAVCCmdUI@@@Z ENDP	; CWIChIDoc::OnUpdateFileOpen
_TEXT	ENDS
;	COMDAT ?GetSize@CStringArray@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?GetSize@CStringArray@@QBEHXZ PROC NEAR			; CStringArray::GetSize, COMDAT

; 216  : 	{ return m_nSize; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSize@CStringArray@@QBEHXZ ENDP			; CStringArray::GetSize
_TEXT	ENDS
EXTRN	?SetAtGrow@CStringArray@@QAEXHPBD@Z:NEAR	; CStringArray::SetAtGrow
;	COMDAT ?Add@CStringArray@@QAEHPBD@Z
_TEXT	SEGMENT
_newElement$ = 8
_this$ = -8
_nIndex$ = -4
?Add@CStringArray@@QAEHPBD@Z PROC NEAR			; CStringArray::Add, COMDAT

; 240  : 	{ int nIndex = m_nSize;

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _nIndex$[ebp], ecx

; 241  : 		SetAtGrow(nIndex, newElement);

	mov	edx, DWORD PTR _newElement$[ebp]
	push	edx
	mov	eax, DWORD PTR _nIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetAtGrow@CStringArray@@QAEXHPBD@Z	; CStringArray::SetAtGrow

; 242  : 		return nIndex; }

	mov	eax, DWORD PTR _nIndex$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@CStringArray@@QAEHPBD@Z ENDP			; CStringArray::Add
_TEXT	ENDS
EXTRN	?SetAtGrow@CStringArray@@QAEXHABVCString@@@Z:NEAR ; CStringArray::SetAtGrow
;	COMDAT ?Add@CStringArray@@QAEHABVCString@@@Z
_TEXT	SEGMENT
_newElement$ = 8
_this$ = -8
_nIndex$ = -4
?Add@CStringArray@@QAEHABVCString@@@Z PROC NEAR		; CStringArray::Add, COMDAT

; 245  : 	{ int nIndex = m_nSize;

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _nIndex$[ebp], ecx

; 246  : 		SetAtGrow(nIndex, newElement);

	mov	edx, DWORD PTR _newElement$[ebp]
	push	edx
	mov	eax, DWORD PTR _nIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetAtGrow@CStringArray@@QAEXHABVCString@@@Z ; CStringArray::SetAtGrow

; 247  : 		return nIndex; }

	mov	eax, DWORD PTR _nIndex$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@CStringArray@@QAEHABVCString@@@Z ENDP		; CStringArray::Add
_TEXT	ENDS
PUBLIC	?ElementAt@CStringArray@@QAEAAVCString@@H@Z	; CStringArray::ElementAt
;	COMDAT ??ACStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT
_nIndex$ = 8
_this$ = -4
??ACStringArray@@QAEAAVCString@@H@Z PROC NEAR		; CStringArray::operator[], COMDAT

; 252  : 	{ return ElementAt(nIndex); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _nIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ElementAt@CStringArray@@QAEAAVCString@@H@Z ; CStringArray::ElementAt
	mov	esp, ebp
	pop	ebp
	ret	4
??ACStringArray@@QAEAAVCString@@H@Z ENDP		; CStringArray::operator[]
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAVCString@@H@Z
_TEXT	SEGMENT
_nIndex$ = 8
_this$ = -4
?ElementAt@CStringArray@@QAEAAVCString@@H@Z PROC NEAR	; CStringArray::ElementAt, COMDAT

; 233  : 	{ ASSERT(nIndex >= 0 && nIndex < m_nSize);

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 234  : 		return m_pData[nIndex]; }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _nIndex$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	esp, ebp
	pop	ebp
	ret	4
?ElementAt@CStringArray@@QAEAAVCString@@H@Z ENDP	; CStringArray::ElementAt
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
;	COMDAT ??3CObject@@SGXPAX@Z
_TEXT	SEGMENT
_p$ = 8
??3CObject@@SGXPAX@Z PROC NEAR				; CObject::operator delete, COMDAT

; 27   : 	{ ::operator delete(p); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	ebp
	ret	4
??3CObject@@SGXPAX@Z ENDP				; CObject::operator delete
_TEXT	ENDS
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
;	COMDAT ??2CObject@@SGPAXI@Z
_TEXT	SEGMENT
_nSize$ = 8
??2CObject@@SGPAXI@Z PROC NEAR				; CObject::operator new, COMDAT

; 33   : 	{ return ::operator new(nSize); }

	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _nSize$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	pop	ebp
	ret	4
??2CObject@@SGPAXI@Z ENDP				; CObject::operator new
_TEXT	ENDS
EXTRN	?_afxPchNil@@3PBDB:DWORD			; _afxPchNil
;	COMDAT ??0CString@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4
??0CString@@QAE@XZ PROC NEAR				; CString::CString, COMDAT

; 127  : 	{ m_pchData = afxEmptyString.m_pchData; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ?_afxPchNil@@3PBDB	; _afxPchNil
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0CString@@QAE@XZ ENDP					; CString::CString
_TEXT	ENDS
PUBLIC	?GetData@CString@@IBEPAUCStringData@@XZ		; CString::GetData
;	COMDAT ?GetLength@CString@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?GetLength@CString@@QBEHXZ PROC NEAR			; CString::GetLength, COMDAT

; 145  : 	{ return GetData()->nDataLength; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@CString@@IBEPAUCStringData@@XZ	; CString::GetData
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLength@CString@@QBEHXZ ENDP				; CString::GetLength
_TEXT	ENDS
;	COMDAT ?GetData@CString@@IBEPAUCStringData@@XZ
_TEXT	SEGMENT
_this$ = -4
?GetData@CString@@IBEPAUCStringData@@XZ PROC NEAR	; CString::GetData, COMDAT

; 122  : 	{ ASSERT(m_pchData != NULL); return ((CStringData*)m_pchData)-1; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, 12					; 0000000cH
	mov	esp, ebp
	pop	ebp
	ret	0
?GetData@CString@@IBEPAUCStringData@@XZ ENDP		; CString::GetData
_TEXT	ENDS
;	COMDAT ?IsEmpty@CString@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsEmpty@CString@@QBEHXZ PROC NEAR			; CString::IsEmpty, COMDAT

; 149  : 	{ return GetData()->nDataLength == 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetData@CString@@IBEPAUCStringData@@XZ	; CString::GetData
	xor	ecx, ecx
	cmp	DWORD PTR [eax+4], 0
	sete	cl
	mov	eax, ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsEmpty@CString@@QBEHXZ ENDP				; CString::IsEmpty
_TEXT	ENDS
;	COMDAT ??BCString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4
??BCString@@QBEPBDXZ PROC NEAR				; CString::operator char const *, COMDAT

; 151  : 	{ return m_pchData; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	esp, ebp
	pop	ebp
	ret	0
??BCString@@QBEPBDXZ ENDP				; CString::operator char const *
_TEXT	ENDS
;	COMDAT ?IsStoring@CArchive@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsStoring@CArchive@@QBEHXZ PROC NEAR			; CArchive::IsStoring, COMDAT

; 324  : 	{ return (m_nMode & CArchive::load) == 0; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	and	eax, 1
	neg	eax
	sbb	eax, eax
	inc	eax
	mov	esp, ebp
	pop	ebp
	ret	0
?IsStoring@CArchive@@QBEHXZ ENDP			; CArchive::IsStoring
_TEXT	ENDS
EXTRN	?AfxGetThread@@YGPAVCWinThread@@XZ:NEAR		; AfxGetThread
;	COMDAT ?AfxGetMainWnd@@YGPAVCWnd@@XZ
_TEXT	SEGMENT
_pThread$ = -4
?AfxGetMainWnd@@YGPAVCWnd@@XZ PROC NEAR			; AfxGetMainWnd, COMDAT

; 31   : 	{ CWinThread* pThread = AfxGetThread();

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	call	?AfxGetThread@@YGPAVCWinThread@@XZ	; AfxGetThread
	mov	DWORD PTR _pThread$[ebp], eax

; 32   : 		return pThread != NULL ? pThread->GetMainWnd() : NULL; }

	cmp	DWORD PTR _pThread$[ebp], 0
	je	SHORT $L127397
	mov	eax, DWORD PTR _pThread$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pThread$[ebp]
	call	DWORD PTR [edx+116]
	mov	DWORD PTR -8+[ebp], eax
	jmp	SHORT $L127398
$L127397:
	mov	DWORD PTR -8+[ebp], 0
$L127398:
	mov	eax, DWORD PTR -8+[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?AfxGetMainWnd@@YGPAVCWnd@@XZ ENDP			; AfxGetMainWnd
_TEXT	ENDS
;	COMDAT ?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -4
?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ PROC NEAR		; CWnd::GetSafeHwnd, COMDAT

; 23   : 	{ return this == NULL ? NULL : m_hWnd; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _this$[ebp], 0
	jne	SHORT $L127400
	mov	DWORD PTR -8+[ebp], 0
	jmp	SHORT $L127401
$L127400:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR -8+[ebp], ecx
$L127401:
	mov	eax, DWORD PTR -8+[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSafeHwnd@CWnd@@QBEPAUHWND__@@XZ ENDP		; CWnd::GetSafeHwnd
_TEXT	ENDS
EXTRN	__imp__PostMessageA@16:NEAR
;	COMDAT ?PostMessageA@CWnd@@QAEHIIJ@Z
_TEXT	SEGMENT
_message$ = 8
_wParam$ = 12
_lParam$ = 16
_this$ = -4
?PostMessageA@CWnd@@QAEHIIJ@Z PROC NEAR			; CWnd::PostMessageA, COMDAT

; 41   : 	{ ASSERT(::IsWindow(m_hWnd)); return ::PostMessage(m_hWnd, message, wParam, lParam); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _message$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__PostMessageA@16
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?PostMessageA@CWnd@@QAEHIIJ@Z ENDP			; CWnd::PostMessageA
_TEXT	ENDS
EXTRN	__imp__UpdateWindow@4:NEAR
;	COMDAT ?UpdateWindow@CWnd@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4
?UpdateWindow@CWnd@@QAEXXZ PROC NEAR			; CWnd::UpdateWindow, COMDAT

; 118  : 	{ ASSERT(::IsWindow(m_hWnd)); ::UpdateWindow(m_hWnd); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	DWORD PTR __imp__UpdateWindow@4
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdateWindow@CWnd@@QAEXXZ ENDP				; CWnd::UpdateWindow
_TEXT	ENDS
EXTRN	__imp__InvalidateRect@12:NEAR
;	COMDAT ?Invalidate@CWnd@@QAEXH@Z
_TEXT	SEGMENT
_bErase$ = 8
_this$ = -4
?Invalidate@CWnd@@QAEXH@Z PROC NEAR			; CWnd::Invalidate, COMDAT

; 126  : 	{ ASSERT(::IsWindow(m_hWnd)); ::InvalidateRect(m_hWnd, NULL, bErase); }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _bErase$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	call	DWORD PTR __imp__InvalidateRect@12
	mov	esp, ebp
	pop	ebp
	ret	4
?Invalidate@CWnd@@QAEXH@Z ENDP				; CWnd::Invalidate
_TEXT	ENDS
;	COMDAT ?IsModified@CDocument@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4
?IsModified@CDocument@@UAEHXZ PROC NEAR			; CDocument::IsModified, COMDAT

; 960  : 	{ ASSERT(this != NULL); return m_bModified; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+68]
	mov	esp, ebp
	pop	ebp
	ret	0
?IsModified@CDocument@@UAEHXZ ENDP			; CDocument::IsModified
_TEXT	ENDS
;	COMDAT ?SetModifiedFlag@CDocument@@UAEXH@Z
_TEXT	SEGMENT
_bModified$ = 8
_this$ = -4
?SetModifiedFlag@CDocument@@UAEXH@Z PROC NEAR		; CDocument::SetModifiedFlag, COMDAT

; 962  : 	{ ASSERT(this != NULL); m_bModified = bModified; }

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bModified$[ebp]
	mov	DWORD PTR [eax+68], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetModifiedFlag@CDocument@@UAEXH@Z ENDP		; CDocument::SetModifiedFlag
_TEXT	ENDS
END
